(()=>{"use strict";var r={521:(r,n,e)=>{e.d(n,{Z:()=>x});var t=e(537),a=e.n(t),i=e(645),o=e.n(i),s=e(667),d=e.n(s),A=new URL(e(492),e.b),c=new URL(e(156),e.b),l=new URL(e(789),e.b),u=new URL(e(10),e.b),h=new URL(e(498),e.b),p=new URL(e(970),e.b),m=new URL(e(608),e.b),g=o()(a());g.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap);"]),g.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Inspiration&display=swap);"]),g.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Inspiration&family=Noto+Serif:ital,wght@1,700&display=swap);"]);var f=d()(A),C=d()(c),b=d()(l),B=d()(u),w=d()(h),v=d()(p),I=d()(m);g.push([r.id,":root {\r\n    --roboto: 'Roboto', Arial, Helvetica, sans-serif;\r\n    --inspiration: 'Inspiration', Arial, Helvetica, cursive;\r\n    --noto-sherif: 'Noto Serif', Arial, Helvetica, serif;\r\n    --really-white: #fdfbf7;\r\n    --coffee: #584831;\r\n    --fake-wood: #81633959;\r\n    --dark-wood: #7e694e;\r\n    --soft-wood: #af9573;\r\n    --woody: #e4caa8;\r\n    --golden-way: #f1bd78;\r\n    --goldenlicious: #ffdaaa;\r\n    --toffee: #f3d7b9;\r\n    --white-chocolate: #ffeed9;\r\n    --brown-chocolate: #f5d3a6;\r\n    --brown-sugar: #947d5f;\r\n    --lucid: rgba(225, 212, 235, 0.596);\r\n    --translucid: rgba(120, 113, 125, 0.292);\r\n    --crystal-clear: rgba(35, 30, 39, 0.084);\r\n    --private: rgba(15, 16, 16, 0.532);\r\n    --sunglasses: rgba(15, 16, 16, 0.699);\r\n    --secret: rgba(15, 16, 16, 0.82);\r\n}\r\n\r\n* {\r\n    font-family: var(--noto-sherif);\r\n}\r\n\r\n/** ESTILOS ITEMS **/\r\n.card {\r\n    padding: 5px 10px 10px 10px;\r\n    border-radius: 15px;\r\n    border: 2px solid var(--golden-way);\r\n    box-shadow: 5px 8px 12px -2px black;\r\n    background-color: var(--white-chocolate);\r\n    overflow: visible;\r\n}\r\n\r\n#anadir-lista,\r\n#weather {\r\n    color: var(--golden-way);\r\n    border-radius: 5px;\r\n    background-color: var(--private);\r\n    margin: 0px 20px;\r\n    padding: 3px;\r\n}\r\n\r\n#main,\r\n#footer,\r\n#anadir-lista,\r\n#weather,\r\n.tooltiptext {\r\n    box-shadow: 5px 8px 8px -4px black;\r\n    border: 1px solid var(--translucid);\r\n}\r\n\r\n.tooltip {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.tooltip .tooltiptext {\r\n    visibility: hidden;\r\n    width: 7.5rem;\r\n    background-color: var(--secret);\r\n    color: var(--goldenlicious);\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    border-radius: 6px;\r\n    padding: 5px 10px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    bottom: 125%;\r\n    left: 50%;\r\n    margin-left: -60px;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n    left: 0rem;\r\n}\r\n\r\n.tooltip .tooltiptext::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: var(--private) transparent transparent transparent;\r\n}\r\n\r\n.tooltip *:hover+.tooltiptext,\r\n.prioridad:hover .tooltiptext {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n.prioridad:hover .tooltiptext {\r\n    bottom: 1.2rem;\r\n    right: 54rem;\r\n    left: -0.3rem;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    background-color: var(--fake-wood);\r\n    width: 0.5rem;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: var(--coffee);\r\n}\r\n\r\n/** CAPAS SOPORTE **/\r\n#app {\r\n    background-image: url("+f+');\r\n    padding: 20px;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: scroll;\r\n    overflow-x: hidden;\r\n}\r\n\r\n#main {\r\n    padding: 20px;\r\n    margin-top: 10px;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    border: 1px solid var(--private);\r\n    align-items: start;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n#footer,\r\n#main {\r\n    backdrop-filter: blur(1px);\r\n    background-color: var(--crystal-clear);\r\n    border-radius: 5px;\r\n}\r\n\r\n.vitrina {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    background-color: var(--private);\r\n    height: 120vh;\r\n    width: 100vw;\r\n    backdrop-filter: blur(2px);\r\n    display: flex;\r\n    justify-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.capa {\r\n    height: 38rem;\r\n    place-self: center;\r\n    justify-self: center;\r\n    align-self: center;\r\n    display: flex;\r\n    justify-items: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.oculto {\r\n    visibility: hidden;\r\n    display: none;\r\n    position: absolute;\r\n}\r\n\r\n/** DIALOGOS **/\r\nform.card {\r\n    padding-top: 10px;\r\n    padding-bottom: 5px;\r\n    z-index: 2;\r\n    width: 26rem;\r\n    box-shadow: 12px 8px 15px 8px black;\r\n    margin-top: 0rem;\r\n    max-height: 40rem;\r\n    display: flex;\r\n    justify-items: flex-start;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n}\r\n\r\nform .titulo {\r\n    text-align: center;\r\n}\r\n\r\n#dialogo-bienvenida,\r\n#dialogo-confirmacion,\r\n#dialogo-informacion {\r\n    margin-top: 5rem;\r\n}\r\n\r\nbutton.aceptar,\r\nbutton.cancelar,\r\nbutton.borrar {\r\n    border: 1px solid var(--soft-wood);\r\n    border: 1px solid var(--golden-way);\r\n    background-color: var(--toffee);\r\n    width: 5rem;\r\n    height: 2rem;\r\n    border-radius: 10px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--soft-wood);\r\n    margin: 5px;\r\n    box-shadow: 1px 3px 10px 2px var(--fake-wood);\r\n}\r\n\r\nbutton.borrar {\r\n    width: 8rem;\r\n}\r\n\r\nbutton.aceptar:hover,\r\nbutton.cancelar:hover,\r\nbutton.borrar:hover {\r\n    color: var(--coffee);\r\n}\r\n\r\nbutton.aceptar:active,\r\nbutton.cancelar:active,\r\nbutton.borrar:active {\r\n    background-color: var(--soft-wood);\r\n    border: none;\r\n    box-shadow: none;\r\n}\r\n\r\n/* CONFIRMACION */\r\n.botonera-dialogo {\r\n    margin-top: 10px;\r\n    margin-bottom: 5px;\r\n    align-self: center;\r\n}\r\n\r\n/* BIENVENIDA */\r\n#editor-usuario {\r\n    margin: 15px;\r\n    flex-direction: column;\r\n    display: flex;\r\n}\r\n\r\n#editor-usuario input {\r\n    margin: 10px 5px 0px 5px;\r\n}\r\n\r\n#dialogo-bienvenida .botonera-dialogo {\r\n    align-self: flex-end;\r\n    margin: 0px 10px 5px 10px;\r\n}\r\n\r\n/* FORMULARIO TAREAS */\r\n#editor1 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    align-items: end;\r\n    justify-content: end;\r\n}\r\n\r\nlabel {\r\n    padding-top: 10px;\r\n}\r\n\r\ninput {\r\n    height: 1.5rem;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n    background-color: floralwhite;\r\n    border: 1px solid var(--golden-way);\r\n    border-radius: 5px;\r\n    outline: none;\r\n    margin-top: 4px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--soft-wood);\r\n    padding-left: 0.3rem;\r\n}\r\n\r\ntextarea {\r\n    height: 3rem;\r\n}\r\n\r\n#descripcion {\r\n    grid-row: 4 / span 2;\r\n}\r\n\r\n/* PRIORIDAD Y FECHA */\r\n#editor2 {\r\n    margin-top: 10px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 10px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n#prioridad {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    padding: 0px 1rem 0px 3.5rem;\r\n}\r\n\r\ninput[type="radio"] {\r\n    position: relative;\r\n    top: 0.25rem;\r\n}\r\n\r\n.etiqueta {\r\n    height: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    align-self: flex-start;\r\n}\r\n\r\ninput[type="date"] {\r\n    width: 8rem;\r\n    margin: 0px 0.5rem 0px 8.5rem;\r\n    font-family: var(--noto-sherif);\r\n\r\n}\r\n\r\n/* CHECKLIST */\r\n#editor3 {\r\n    border: 1px solid var(--golden-way);\r\n    padding: 0px 15px 10px 5px;\r\n    margin-top: 20px;\r\n    box-shadow: 1px -3px 10px 2px var(--fake-wood);\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n}\r\n\r\n#editor3 .checklist {\r\n    margin: 0.5rem;\r\n    margin-top: 0.8rem;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n}\r\n\r\n#checklist {\r\n    position: sticky;\r\n}\r\n\r\n#task {\r\n    width: 15rem;\r\n    margin-left: 1rem;\r\n    box-shadow: inset -1px -1px 2px 1px var(--fake-wood);\r\n    border: none;\r\n    border-radius: 0px;\r\n    background-color: var(--really-white);\r\n}\r\n\r\n#botonera-dialogo-tarea {\r\n    margin-top: 13px;\r\n    align-self: flex-end;\r\n}\r\n\r\n/** INTERFAZ **/\r\n/* CABECERA */\r\n#header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: aliceblue;\r\n    padding: 10px;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n\r\n#logo {\r\n    font-family: var(--inspiration);\r\n    font-size: 4rem;\r\n    margin-left: 10px;\r\n    text-shadow: 5px 5px 2px black;\r\n    margin-right: 40px;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: var(--lucid);\r\n    margin-right: 10px;\r\n    font-family: var(--noto-sherif);\r\n}\r\n\r\na:hover {\r\n    color: aliceblue;\r\n}\r\n\r\n/* WIDGET TIEMPO */\r\n#weather {\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr;\r\n    grid-template-rows: 4fr 1fr;\r\n    align-items: center;\r\n    height: 7.5rem;\r\n    width: 14rem;\r\n    color: var(--goldenlicious);\r\n}\r\n\r\n#temp-layout {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n#weather-temp {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n}\r\n\r\n#weather-loc {\r\n    text-align: center;\r\n}\r\n\r\n#weather-description {\r\n    grid-column: 1 / span 2;\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    place-self: center;\r\n}\r\n\r\n#anadir-lista {\r\n    height: 5rem;\r\n    width: 7rem;\r\n    color: var(--golden-way);\r\n}\r\n\r\n#anadir-lista:hover {\r\n    color: var(--goldenlicious);\r\n    background-color: var(--sunglasses);\r\n}\r\n\r\n#anadir-lista:active {\r\n    background-color: var(--secret);\r\n}\r\n\r\n/** LISTAS **/\r\n#main .card {\r\n    width: 24.8rem;\r\n    margin: 10px;\r\n    padding-bottom: 2px;\r\n}\r\n\r\n.cabecera {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.card>.cabecera {\r\n    margin: 2px 10px;\r\n}\r\n\r\n.nombre {\r\n    border: none;\r\n    flex: 1;\r\n    background-color: var(--white-chocolate);\r\n    height: 1.3rem;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.nombre,\r\nform .titulo {\r\n    margin-right: 5px;\r\n    font-weight: 600;\r\n    font-size: 1.3rem;\r\n    padding-bottom: 3px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--coffee);\r\n}\r\n\r\n::placeholder {\r\n    color: var(--fake-wood);\r\n}\r\n\r\nbutton {\r\n    border-radius: 100px;\r\n    border: none;\r\n    background-color: transparent;\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    background-size: 1.2rem;\r\n}\r\n\r\n.card>.cabecera:hover button.eliminar {\r\n    background-image: url('+C+");\r\n}\r\n\r\n.card>.cabecera button.anadir {\r\n    background-image: url("+b+");\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n}\r\n\r\n/** TAREAS **/\r\n.item {\r\n    margin: 3px;\r\n    border-radius: 13px;\r\n}\r\n\r\n.item>.cabecera {\r\n    background-color: var(--woody);\r\n}\r\n\r\n.item.show>.cabecera {\r\n    background-color: var(--brown-chocolate);\r\n    box-shadow: 0px 10px 7px -7px var(--fake-wood);\r\n}\r\n\r\n.item>.cabecera:hover .opener {\r\n    background-color: var(--coffee);\r\n}\r\n\r\n.item>.cabecera:hover {\r\n    background-color: var(--brown-chocolate);\r\n\r\n}\r\n\r\n.item>.cabecera:active {\r\n    background-color: var(--woody);\r\n}\r\n\r\n.item .opener {\r\n    border-radius: 50px;\r\n    background-image: url("+B+');\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    margin: 3px;\r\n    animation-name: spinback;\r\n    animation-duration: 0.15s;\r\n    animation-fill-mode: forwards;\r\n}\r\n\r\n.item.show .opener {\r\n    animation-name: spin;\r\n    animation-duration: 0.25s;\r\n    animation-fill-mode: forwards;\r\n}\r\n\r\n@keyframes spin {\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(90deg);\r\n    }\r\n}\r\n\r\n@keyframes spinback {\r\n    from {\r\n        transform: rotate(90deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(0deg);\r\n    }\r\n}\r\n\r\n.item .prioridad {\r\n    border-radius: 100px;\r\n    width: 0.6rem;\r\n    height: 0.62rem;\r\n}\r\n\r\n.prioridad.alta {\r\n    background-color: red;\r\n}\r\n\r\n.prioridad.media {\r\n    background-color: orange;\r\n}\r\n\r\n.prioridad.baja {\r\n    background-color: green;\r\n}\r\n\r\n.item .titulo,\r\nform label {\r\n    flex: 1;\r\n    font-size: 0.9rem;\r\n    font-family: var(--noto-sherif);\r\n    font-style: oblique;\r\n    color: var(--dark-wood);\r\n    margin: 0px 8px;\r\n}\r\n\r\n.fecha {\r\n    font-size: 0.9rem;\r\n    font-weight: bolder;\r\n    font-family: var(--inspiration);\r\n    color: var(--really-white);\r\n    position: relative;\r\n    top: 1px;\r\n    margin: 0px 10px;\r\n}\r\n\r\n/* CONTENIDO TAREA */\r\n.item>.contenido {\r\n    background-color: floralwhite;\r\n    color: var(--coffee);\r\n    box-shadow: inset -3px -6px 10px 2px var(--fake-wood);\r\n    margin: 0px 0px 4px 0px;\r\n    max-height: 0rem;\r\n    transition: max-height 0.15s ease-out;\r\n    overflow: hidden;\r\n}\r\n\r\n.item.show>.contenido {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 100rem;\r\n    transition: max-height 0.25s ease-in;\r\n}\r\n\r\n.contenido * {\r\n    font-size: 0.7rem;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--dark-wood);\r\n}\r\n\r\n.item .descripcion {\r\n    margin: 18px 18px 10px 18px;\r\n}\r\n\r\n/** CHECKLIST **/\r\n.checklist {\r\n    font-size: 0.7rem;\r\n    margin: 5px 22px 0px 30px;\r\n    overflow: scroll;\r\n    overflow-x: hidden;\r\n    max-height: 96rem;\r\n}\r\n\r\n.checklist::-webkit-scrollbar {\r\n    background-color: transparent;\r\n}\r\n\r\n.checklist::-webkit-scrollbar-thumb {\r\n    background-color: transparent;\r\n}\r\n\r\n/* CHECKBOX */\r\ninput[type="checkbox"]+label:before {\r\n    position: relative;\r\n    bottom: 7px;\r\n    content: "";\r\n    width: 12px;\r\n    height: 12px;\r\n    float: left;\r\n    margin: 0.5em 0.5em 0 0;\r\n    border: 2px solid var(--goldenlicious);\r\n    background: white;\r\n    border-radius: 4px;\r\n}\r\n\r\ninput[type="checkbox"]:hover+label:before {\r\n    border-color: var(--woody);\r\n}\r\n\r\ninput[type="checkbox"]:checked+label:before {\r\n    border-color: var(--soft-wood)\r\n}\r\n\r\ninput[type="checkbox"]:checked:hover+label:before {\r\n    border-color: var(--dark-wood)\r\n}\r\n\r\ninput[type="checkbox"]:disabled+label:before {\r\n    background-color: var(--white-chocolate);\r\n    border-color: var(--golden-way)\r\n}\r\n\r\ninput[type="checkbox"]:checked+label:after {\r\n    content: "";\r\n    width: 0.7rem;\r\n    height: 0.10rem;\r\n    border: 3px solid var(--dark-wood);\r\n    float: left;\r\n    margin-left: -1.3rem;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    margin-top: 0.22rem;\r\n    transform: rotate(-55deg);\r\n}\r\n\r\ninput[type="checkbox"]:checked:disabled+label:after {\r\n    border-color: var(--goldenlicious)\r\n}\r\n\r\ninput[type="checkbox"] {\r\n    display: none;\r\n}\r\n\r\n/* SUBTAREA CHECKLIST */\r\n.task {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: center;\r\n}\r\n\r\n.task label {\r\n    flex: 1;\r\n}\r\n\r\n.task button.eliminar {\r\n    visibility: hidden;\r\n}\r\n\r\n#editor3 .task button.eliminar {\r\n    visibility: visible;\r\n    position: relative;\r\n    top: 1px;\r\n}\r\n\r\n#editor3 .task:hover {\r\n    background-color: var(--goldenlicious);\r\n}\r\n\r\n.contenido button.editar,\r\n.acciones button.editar {\r\n    width: 1.35rem;\r\n    height: 1.65rem;\r\n}\r\n\r\n.contenido button.editar {\r\n    bottom: 0.5rem;\r\n    left: 22.4rem;\r\n    position: relative;\r\n}\r\n\r\n.item .contenido:hover button.editar,\r\n.card>.acciones button.editar {\r\n    background-image: url('+w+');\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n/* FOOTER */\r\n#footer {\r\n    padding: 30px 25px;\r\n    margin-top: 20px;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/** MASCARAS ICONOS **/\r\n@supports (-webkit-mask: url("")) or (mask: url("")) {\r\n\r\n    /* FLECHA ABRIR TAREA */\r\n    .item .opener {\r\n        -webkit-mask: url('+B+");\r\n        mask: url("+B+");\r\n        background: antiquewhite;\r\n        width: 1.35rem;\r\n        height: 1.5rem;\r\n    }\r\n\r\n    .item>.cabecera:hover .opener {\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    /* COLORES BOTONES LISTA */\r\n    .card>.cabecera:hover button.eliminar,\r\n    .card>.cabecera:hover button.editar,\r\n    button.anadir,\r\n    button.ok {\r\n        background: var(--dark-wood);\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .card>.cabecera button.eliminar:hover,\r\n    .card>.cabecera button.editar:hover,\r\n    .card>.cabecera button.anadir:hover,\r\n    button.anadir:hover,\r\n    button.ok:hover {\r\n        background: var(--golden-way);\r\n    }\r\n\r\n    .card>.cabecera button.eliminar:active,\r\n    .card>.cabecera button.editar:active,\r\n    .card>.cabecera button.anadir:active,\r\n    button.anadir:active,\r\n    button.ok:active {\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    /* ACEPTAR */\r\n    button.ok {\r\n        -webkit-mask: url("+v+");\r\n        mask: url("+v+");\r\n        mask-size: cover;\r\n        width: 1.45rem;\r\n        height: 1.4rem;\r\n    }\r\n\r\n    /* EDITAR NOMBRE LISTA */\r\n    .card>.cabecera button.editar {\r\n        -webkit-mask: url("+w+");\r\n        mask: url("+w+");\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        width: 1.55rem;\r\n        height: 1.55rem;\r\n        position: relative;\r\n        top: 0.15rem;\r\n    }\r\n\r\n    /* ELIMINAR LISTA */\r\n    .card>.cabecera button.eliminar {\r\n        width: 1.6rem;\r\n        height: 1.35rem;\r\n        margin-bottom: 5px;\r\n        margin-left: 1px;\r\n        -webkit-mask: url("+C+");\r\n        mask: url("+C+");\r\n        mask-size: cover;\r\n    }\r\n\r\n    /* AÑADIR GENERAL */\r\n    button.anadir {\r\n        -webkit-mask: url("+b+");\r\n        mask: url("+b+");\r\n        mask-size: cover;\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    /* AÑADIR TAREA */\r\n    .card>.cabecera button.anadir {\r\n        width: 1.35rem;\r\n        height: 1.35rem;\r\n    }\r\n\r\n    /* ELIMINAR TAREA */\r\n    .item .cabecera button.eliminar,\r\n    .task button.eliminar {\r\n        margin: 0px 3px 0px 0px;\r\n        width: 1.45rem;\r\n        height: 1.3rem;\r\n    }\r\n\r\n    .item>.cabecera:hover button.eliminar,\r\n    .item.show>.cabecera button.eliminar,\r\n    .task:hover button.eliminar {\r\n        -webkit-mask: url("+I+");\r\n        mask: url("+I+");\r\n        mask-size: cover;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    .item>.cabecera button.eliminar:hover,\r\n    .task button.eliminar:hover {\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    .item>.cabecera button.eliminar:active,\r\n    .task button.eliminar:active {\r\n        background: var(--goldenlicious);\r\n    }\r\n\r\n    /* EDITAR TAREA  */\r\n    .item .contenido:hover button.editar {\r\n        -webkit-mask: url("+w+");\r\n        mask: url("+w+");\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        width: 1.65rem;\r\n        height: 1.65rem;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    .item .contenido button.editar:hover {\r\n        background: var(--golden-way);\r\n    }\r\n\r\n    .item .contenido button.editar:active {\r\n        background: var(--dark-wood);\r\n    }\r\n}\r\n\r\n/** MOVILES **/\r\n@media (max-width: 767.98px) {\r\n\r\n    #app {\r\n        background-position: 0rem;\r\n        padding: 5px;\r\n    }\r\n\r\n    #main,\r\n    #footer {\r\n        margin: 3px;\r\n        padding: 3px;\r\n    }\r\n\r\n    #main {\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    #header,\r\n    .header {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    #logo {\r\n        font-size: 3.5rem;\r\n        text-align: center;\r\n    }\r\n\r\n    #anadir-lista,\r\n    #weather {\r\n        height: 3rem;\r\n        border-radius: 5px;\r\n        background-color: var(--sunglasses);\r\n        margin-top: 20px;\r\n        padding: 5px;\r\n        width: 80vw;\r\n    }\r\n\r\n    #anadir-lista {\r\n    }\r\n\r\n    /* WIDGET TIEMPO */\r\n    #weather {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-template-rows: 3fr 1fr;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 6rem;\r\n        color: var(--goldenlicious);\r\n        padding: 10px;\r\n    }\r\n\r\n    #weather-image {\r\n        height: 5rem;\r\n        width: 5rem;\r\n        grid-column: 2;\r\n        grid-row: 1;\r\n        place-self: center;\r\n        background-size: cover;\r\n    }\r\n\r\n    #temp-layout {\r\n        grid-row: 1 / span 2;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    #weather-temp {\r\n        font-size: 3.2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        color: var(--golden-way);\r\n    }\r\n\r\n    #weather-loc {\r\n        font-size: 1.3rem;\r\n        text-align: center;\r\n        place-self: center;\r\n\r\n    }\r\n\r\n    #weather-description {\r\n        font-size: 0.8rem;\r\n        text-align: center;\r\n        place-self: center;\r\n        grid-column: 2;\r\n        grid-row: 2;\r\n        position: relative;\r\n        bottom: 0.3rem;\r\n    }\r\n\r\n    /* LISTAS */\r\n    .acciones {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n    }\r\n\r\n    .nombre {\r\n        width: 50vw;\r\n    }\r\n\r\n    /** LISTAS **/\r\n    #main .card,\r\n    .vitrina .card {\r\n        width: 80vw;\r\n    }\r\n\r\n    form.card {\r\n        margin-top: 10px;\r\n        position: sticky;\r\n        max-height: 33rem;\r\n    }\r\n\r\n    .item>.cabecera {\r\n        height: 2.6rem;\r\n    }\r\n\r\n    /* DIALOGOS */\r\n    .vitrina {\r\n        position: fixed;\r\n    }\r\n\r\n    .capa {\r\n        height: 80vh;\r\n    }\r\n\r\n    #editor2 label {\r\n        width: 10px;\r\n    }\r\n\r\n    #prioridad {\r\n        width: 50vw;\r\n        justify-self: end;\r\n    }\r\n\r\n    #prioridad label {\r\n        font-size: 0.8rem;\r\n        width: 8px;\r\n    }\r\n\r\n    /* COLORES BOTONES LISTA */\r\n    .card>.cabecera button.eliminar,\r\n    .card>.cabecera button.editar,\r\n    button.anadir,\r\n    button.ok {\r\n        background: var(--dark-wood);\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    /* ELIMINAR  */\r\n    .item>.cabecera button.eliminar,\r\n    .task button.eliminar {\r\n        -webkit-mask: url("+I+");\r\n        mask: url("+I+");\r\n        mask-size: cover;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    /* EDITAR */\r\n    .card>.cabecera button.editar {\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n\r\n    /* EDITAR TAREA  */\r\n    .contenido button.editar {\r\n        -webkit-mask: url("+w+");\r\n        mask: url("+w+");\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        background: var(--soft-wood);\r\n        left: 70vw;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/css/estilos.css"],names:[],mappings:"AAIA;IACI,gDAAgD;IAChD,uDAAuD;IACvD,oDAAoD;IACpD,uBAAuB;IACvB,iBAAiB;IACjB,sBAAsB;IACtB,oBAAoB;IACpB,oBAAoB;IACpB,gBAAgB;IAChB,qBAAqB;IACrB,wBAAwB;IACxB,iBAAiB;IACjB,0BAA0B;IAC1B,0BAA0B;IAC1B,sBAAsB;IACtB,mCAAmC;IACnC,wCAAwC;IACxC,wCAAwC;IACxC,kCAAkC;IAClC,qCAAqC;IACrC,gCAAgC;AACpC;;AAEA;IACI,+BAA+B;AACnC;;AAEA,oBAAoB;AACpB;IACI,2BAA2B;IAC3B,mBAAmB;IACnB,mCAAmC;IACnC,mCAAmC;IACnC,wCAAwC;IACxC,iBAAiB;AACrB;;AAEA;;IAEI,wBAAwB;IACxB,kBAAkB;IAClB,gCAAgC;IAChC,gBAAgB;IAChB,YAAY;AAChB;;AAEA;;;;;IAKI,kCAAkC;IAClC,mCAAmC;AACvC;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,+BAA+B;IAC/B,2BAA2B;IAC3B,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,SAAS;IACT,kBAAkB;IAClB,UAAU;IACV,wBAAwB;IACxB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,gEAAgE;AACpE;;AAEA;;IAEI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,kCAAkC;IAClC,aAAa;AACjB;;AAEA;IACI,+BAA+B;AACnC;;AAEA,oBAAoB;AACpB;IACI,yDAAkD;IAClD,aAAa;IACb,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,OAAO;IACP,aAAa;IACb,eAAe;IACf,gCAAgC;IAChC,kBAAkB;IAClB,6BAA6B;AACjC;;AAEA;;IAEI,0BAA0B;IAC1B,sCAAsC;IACtC,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,QAAQ;IACR,OAAO;IACP,YAAY;IACZ,gCAAgC;IAChC,aAAa;IACb,YAAY;IACZ,0BAA0B;IAC1B,aAAa;IACb,qBAAqB;IACrB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAClB,aAAa;IACb,yBAAyB;IACzB,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,kBAAkB;AACtB;;AAEA,eAAe;AACf;IACI,iBAAiB;IACjB,mBAAmB;IACnB,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,yBAAyB;IACzB,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;;IAGI,gBAAgB;AACpB;;AAEA;;;IAGI,kCAAkC;IAClC,mCAAmC;IACnC,+BAA+B;IAC/B,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,+BAA+B;IAC/B,uBAAuB;IACvB,WAAW;IACX,6CAA6C;AACjD;;AAEA;IACI,WAAW;AACf;;AAEA;;;IAGI,oBAAoB;AACxB;;AAEA;;;IAGI,kCAAkC;IAClC,YAAY;IACZ,gBAAgB;AACpB;;AAEA,iBAAiB;AACjB;IACI,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA,eAAe;AACf;IACI,YAAY;IACZ,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,oBAAoB;IACpB,yBAAyB;AAC7B;;AAEA,sBAAsB;AACtB;IACI,aAAa;IACb,0BAA0B;IAC1B,2BAA2B;IAC3B,gBAAgB;IAChB,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,6BAA6B;IAC7B,mCAAmC;IACnC,kBAAkB;IAClB,aAAa;IACb,eAAe;IACf,+BAA+B;IAC/B,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,oBAAoB;AACxB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;IAChB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,6BAA6B;IAC7B,+BAA+B;;AAEnC;;AAEA,cAAc;AACd;IACI,mCAAmC;IACnC,0BAA0B;IAC1B,gBAAgB;IAChB,8CAA8C;IAC9C,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,oDAAoD;IACpD,YAAY;IACZ,kBAAkB;IAClB,qCAAqC;AACzC;;AAEA;IACI,gBAAgB;IAChB,oBAAoB;AACxB;;AAEA,eAAe;AACf,aAAa;AACb;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;;AAGA;IACI,+BAA+B;IAC/B,eAAe;IACf,iBAAiB;IACjB,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,gBAAgB;AACpB;;AAEA,kBAAkB;AAClB;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,mBAAmB;IACnB,cAAc;IACd,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,wBAAwB;AAC5B;;AAEA;IACI,2BAA2B;IAC3B,mCAAmC;AACvC;;AAEA;IACI,+BAA+B;AACnC;;AAEA,aAAa;AACb;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,OAAO;IACP,wCAAwC;IACxC,cAAc;IACd,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;;IAEI,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;IACnB,+BAA+B;IAC/B,oBAAoB;AACxB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,oBAAoB;IACpB,YAAY;IACZ,6BAA6B;IAC7B,aAAa;IACb,cAAc;IACd,uBAAuB;AAC3B;;AAEA;IACI,yDAAqD;AACzD;;AAEA;IACI,yDAAwC;IACxC,aAAa;IACb,cAAc;AAClB;;AAEA,aAAa;AACb;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,wCAAwC;IACxC,8CAA8C;AAClD;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,wCAAwC;;AAE5C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,mBAAmB;IACnB,yDAA8C;IAC9C,aAAa;IACb,cAAc;IACd,WAAW;IACX,wBAAwB;IACxB,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;IACI;QACI,uBAAuB;IAC3B;;IAEA;QACI,wBAAwB;IAC5B;AACJ;;AAEA;IACI;QACI,wBAAwB;IAC5B;;IAEA;QACI,uBAAuB;IAC3B;AACJ;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;;IAEI,OAAO;IACP,iBAAiB;IACjB,+BAA+B;IAC/B,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,+BAA+B;IAC/B,0BAA0B;IAC1B,kBAAkB;IAClB,QAAQ;IACR,gBAAgB;AACpB;;AAEA,oBAAoB;AACpB;IACI,6BAA6B;IAC7B,oBAAoB;IACpB,qDAAqD;IACrD,uBAAuB;IACvB,gBAAgB;IAChB,qCAAqC;IACrC,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,oCAAoC;AACxC;;AAEA;IACI,iBAAiB;IACjB,+BAA+B;IAC/B,uBAAuB;AAC3B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA,gBAAgB;AAChB;IACI,iBAAiB;IACjB,yBAAyB;IACzB,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,6BAA6B;AACjC;;AAEA,aAAa;AACb;IACI,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,sCAAsC;IACtC,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI,wCAAwC;IACxC;AACJ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,eAAe;IACf,kCAAkC;IAClC,WAAW;IACX,oBAAoB;IACpB,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;IACI;AACJ;;AAEA;IACI,aAAa;AACjB;;AAEA,uBAAuB;AACvB;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;AACzB;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;;IAEI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,yDAA0C;IAC1C,4BAA4B;AAChC;;AAEA,WAAW;AACX;IACI,kBAAkB;IAClB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA,sBAAsB;AACtB;;IAEI,uBAAuB;IACvB;QACI,qDAA0C;QAC1C,6CAAkC;QAClC,wBAAwB;QACxB,cAAc;QACd,cAAc;IAClB;;IAEA;QACI,4BAA4B;IAChC;;IAEA,0BAA0B;IAC1B;;;;QAII,4BAA4B;QAC5B,4BAA4B;IAChC;;IAEA;;;;;QAKI,6BAA6B;IACjC;;IAEA;;;;;QAKI,4BAA4B;IAChC;;IAEA,YAAY;IACZ;QACI,qDAAqC;QACrC,6CAA6B;QAC7B,gBAAgB;QAChB,cAAc;QACd,cAAc;IAClB;;IAEA,wBAAwB;IACxB;QACI,qDAAsC;QACtC,6CAA8B;QAC9B,gBAAgB;QAChB,4BAA4B;QAC5B,cAAc;QACd,eAAe;QACf,kBAAkB;QAClB,YAAY;IAChB;;IAEA,mBAAmB;IACnB;QACI,aAAa;QACb,eAAe;QACf,kBAAkB;QAClB,gBAAgB;QAChB,qDAAiD;QACjD,6CAAyC;QACzC,gBAAgB;IACpB;;IAEA,mBAAmB;IACnB;QACI,qDAAoC;QACpC,6CAA4B;QAC5B,gBAAgB;QAChB,4BAA4B;IAChC;;IAEA,iBAAiB;IACjB;QACI,cAAc;QACd,eAAe;IACnB;;IAEA,mBAAmB;IACnB;;QAEI,uBAAuB;QACvB,cAAc;QACd,cAAc;IAClB;;IAEA;;;QAGI,qDAA4C;QAC5C,6CAAoC;QACpC,gBAAgB;QAChB,4BAA4B;IAChC;;IAEA;;QAEI,4BAA4B;IAChC;;IAEA;;QAEI,gCAAgC;IACpC;;IAEA,kBAAkB;IAClB;QACI,qDAAsC;QACtC,6CAA8B;QAC9B,gBAAgB;QAChB,4BAA4B;QAC5B,cAAc;QACd,eAAe;QACf,4BAA4B;IAChC;;IAEA;QACI,6BAA6B;IACjC;;IAEA;QACI,4BAA4B;IAChC;AACJ;;AAEA,cAAc;AACd;;IAEI;QACI,yBAAyB;QACzB,YAAY;IAChB;;IAEA;;QAEI,WAAW;QACX,YAAY;IAChB;;IAEA;QACI,sBAAsB;QACtB,2BAA2B;IAC/B;;IAEA;;QAEI,sBAAsB;QACtB,mBAAmB;IACvB;;IAEA;QACI,iBAAiB;QACjB,kBAAkB;IACtB;;IAEA;;QAEI,YAAY;QACZ,kBAAkB;QAClB,mCAAmC;QACnC,gBAAgB;QAChB,YAAY;QACZ,WAAW;IACf;;IAEA;IACA;;IAEA,kBAAkB;IAClB;QACI,aAAa;QACb,8BAA8B;QAC9B,2BAA2B;QAC3B,mBAAmB;QACnB,uBAAuB;QACvB,YAAY;QACZ,2BAA2B;QAC3B,aAAa;IACjB;;IAEA;QACI,YAAY;QACZ,WAAW;QACX,cAAc;QACd,WAAW;QACX,kBAAkB;QAClB,sBAAsB;IAC1B;;IAEA;QACI,oBAAoB;QACpB,8BAA8B;IAClC;;IAEA;QACI,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,wBAAwB;IAC5B;;IAEA;QACI,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB;;IAEtB;;IAEA;QACI,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB;QAClB,cAAc;QACd,WAAW;QACX,kBAAkB;QAClB,cAAc;IAClB;;IAEA,WAAW;IACX;QACI,aAAa;QACb,mBAAmB;QACnB,iBAAiB;IACrB;;IAEA;QACI,WAAW;IACf;;IAEA,aAAa;IACb;;QAEI,WAAW;IACf;;IAEA;QACI,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;IACrB;;IAEA;QACI,cAAc;IAClB;;IAEA,aAAa;IACb;QACI,eAAe;IACnB;;IAEA;QACI,YAAY;IAChB;;IAEA;QACI,WAAW;IACf;;IAEA;QACI,WAAW;QACX,iBAAiB;IACrB;;IAEA;QACI,iBAAiB;QACjB,UAAU;IACd;;IAEA,0BAA0B;IAC1B;;;;QAII,4BAA4B;QAC5B,4BAA4B;IAChC;;IAEA,cAAc;IACd;;QAEI,qDAA4C;QAC5C,6CAAoC;QACpC,gBAAgB;QAChB,4BAA4B;IAChC;;IAEA,WAAW;IACX;QACI,kBAAkB;QAClB,SAAS;IACb;;IAEA,kBAAkB;IAClB;QACI,qDAAsC;QACtC,6CAA8B;QAC9B,gBAAgB;QAChB,4BAA4B;QAC5B,4BAA4B;QAC5B,UAAU;IACd;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Inspiration&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Inspiration&family=Noto+Serif:ital,wght@1,700&display=swap');\r\n\r\n:root {\r\n    --roboto: 'Roboto', Arial, Helvetica, sans-serif;\r\n    --inspiration: 'Inspiration', Arial, Helvetica, cursive;\r\n    --noto-sherif: 'Noto Serif', Arial, Helvetica, serif;\r\n    --really-white: #fdfbf7;\r\n    --coffee: #584831;\r\n    --fake-wood: #81633959;\r\n    --dark-wood: #7e694e;\r\n    --soft-wood: #af9573;\r\n    --woody: #e4caa8;\r\n    --golden-way: #f1bd78;\r\n    --goldenlicious: #ffdaaa;\r\n    --toffee: #f3d7b9;\r\n    --white-chocolate: #ffeed9;\r\n    --brown-chocolate: #f5d3a6;\r\n    --brown-sugar: #947d5f;\r\n    --lucid: rgba(225, 212, 235, 0.596);\r\n    --translucid: rgba(120, 113, 125, 0.292);\r\n    --crystal-clear: rgba(35, 30, 39, 0.084);\r\n    --private: rgba(15, 16, 16, 0.532);\r\n    --sunglasses: rgba(15, 16, 16, 0.699);\r\n    --secret: rgba(15, 16, 16, 0.82);\r\n}\r\n\r\n* {\r\n    font-family: var(--noto-sherif);\r\n}\r\n\r\n/** ESTILOS ITEMS **/\r\n.card {\r\n    padding: 5px 10px 10px 10px;\r\n    border-radius: 15px;\r\n    border: 2px solid var(--golden-way);\r\n    box-shadow: 5px 8px 12px -2px black;\r\n    background-color: var(--white-chocolate);\r\n    overflow: visible;\r\n}\r\n\r\n#anadir-lista,\r\n#weather {\r\n    color: var(--golden-way);\r\n    border-radius: 5px;\r\n    background-color: var(--private);\r\n    margin: 0px 20px;\r\n    padding: 3px;\r\n}\r\n\r\n#main,\r\n#footer,\r\n#anadir-lista,\r\n#weather,\r\n.tooltiptext {\r\n    box-shadow: 5px 8px 8px -4px black;\r\n    border: 1px solid var(--translucid);\r\n}\r\n\r\n.tooltip {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.tooltip .tooltiptext {\r\n    visibility: hidden;\r\n    width: 7.5rem;\r\n    background-color: var(--secret);\r\n    color: var(--goldenlicious);\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    border-radius: 6px;\r\n    padding: 5px 10px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    bottom: 125%;\r\n    left: 50%;\r\n    margin-left: -60px;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n    left: 0rem;\r\n}\r\n\r\n.tooltip .tooltiptext::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: var(--private) transparent transparent transparent;\r\n}\r\n\r\n.tooltip *:hover+.tooltiptext,\r\n.prioridad:hover .tooltiptext {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n.prioridad:hover .tooltiptext {\r\n    bottom: 1.2rem;\r\n    right: 54rem;\r\n    left: -0.3rem;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    background-color: var(--fake-wood);\r\n    width: 0.5rem;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: var(--coffee);\r\n}\r\n\r\n/** CAPAS SOPORTE **/\r\n#app {\r\n    background-image: url('../img/lost-in-forest.jpg');\r\n    padding: 20px;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: scroll;\r\n    overflow-x: hidden;\r\n}\r\n\r\n#main {\r\n    padding: 20px;\r\n    margin-top: 10px;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    border: 1px solid var(--private);\r\n    align-items: start;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n#footer,\r\n#main {\r\n    backdrop-filter: blur(1px);\r\n    background-color: var(--crystal-clear);\r\n    border-radius: 5px;\r\n}\r\n\r\n.vitrina {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    background-color: var(--private);\r\n    height: 120vh;\r\n    width: 100vw;\r\n    backdrop-filter: blur(2px);\r\n    display: flex;\r\n    justify-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.capa {\r\n    height: 38rem;\r\n    place-self: center;\r\n    justify-self: center;\r\n    align-self: center;\r\n    display: flex;\r\n    justify-items: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.oculto {\r\n    visibility: hidden;\r\n    display: none;\r\n    position: absolute;\r\n}\r\n\r\n/** DIALOGOS **/\r\nform.card {\r\n    padding-top: 10px;\r\n    padding-bottom: 5px;\r\n    z-index: 2;\r\n    width: 26rem;\r\n    box-shadow: 12px 8px 15px 8px black;\r\n    margin-top: 0rem;\r\n    max-height: 40rem;\r\n    display: flex;\r\n    justify-items: flex-start;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n}\r\n\r\nform .titulo {\r\n    text-align: center;\r\n}\r\n\r\n#dialogo-bienvenida,\r\n#dialogo-confirmacion,\r\n#dialogo-informacion {\r\n    margin-top: 5rem;\r\n}\r\n\r\nbutton.aceptar,\r\nbutton.cancelar,\r\nbutton.borrar {\r\n    border: 1px solid var(--soft-wood);\r\n    border: 1px solid var(--golden-way);\r\n    background-color: var(--toffee);\r\n    width: 5rem;\r\n    height: 2rem;\r\n    border-radius: 10px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--soft-wood);\r\n    margin: 5px;\r\n    box-shadow: 1px 3px 10px 2px var(--fake-wood);\r\n}\r\n\r\nbutton.borrar {\r\n    width: 8rem;\r\n}\r\n\r\nbutton.aceptar:hover,\r\nbutton.cancelar:hover,\r\nbutton.borrar:hover {\r\n    color: var(--coffee);\r\n}\r\n\r\nbutton.aceptar:active,\r\nbutton.cancelar:active,\r\nbutton.borrar:active {\r\n    background-color: var(--soft-wood);\r\n    border: none;\r\n    box-shadow: none;\r\n}\r\n\r\n/* CONFIRMACION */\r\n.botonera-dialogo {\r\n    margin-top: 10px;\r\n    margin-bottom: 5px;\r\n    align-self: center;\r\n}\r\n\r\n/* BIENVENIDA */\r\n#editor-usuario {\r\n    margin: 15px;\r\n    flex-direction: column;\r\n    display: flex;\r\n}\r\n\r\n#editor-usuario input {\r\n    margin: 10px 5px 0px 5px;\r\n}\r\n\r\n#dialogo-bienvenida .botonera-dialogo {\r\n    align-self: flex-end;\r\n    margin: 0px 10px 5px 10px;\r\n}\r\n\r\n/* FORMULARIO TAREAS */\r\n#editor1 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    align-items: end;\r\n    justify-content: end;\r\n}\r\n\r\nlabel {\r\n    padding-top: 10px;\r\n}\r\n\r\ninput {\r\n    height: 1.5rem;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n    background-color: floralwhite;\r\n    border: 1px solid var(--golden-way);\r\n    border-radius: 5px;\r\n    outline: none;\r\n    margin-top: 4px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--soft-wood);\r\n    padding-left: 0.3rem;\r\n}\r\n\r\ntextarea {\r\n    height: 3rem;\r\n}\r\n\r\n#descripcion {\r\n    grid-row: 4 / span 2;\r\n}\r\n\r\n/* PRIORIDAD Y FECHA */\r\n#editor2 {\r\n    margin-top: 10px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 10px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n#prioridad {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    padding: 0px 1rem 0px 3.5rem;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n    position: relative;\r\n    top: 0.25rem;\r\n}\r\n\r\n.etiqueta {\r\n    height: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    align-self: flex-start;\r\n}\r\n\r\ninput[type=\"date\"] {\r\n    width: 8rem;\r\n    margin: 0px 0.5rem 0px 8.5rem;\r\n    font-family: var(--noto-sherif);\r\n\r\n}\r\n\r\n/* CHECKLIST */\r\n#editor3 {\r\n    border: 1px solid var(--golden-way);\r\n    padding: 0px 15px 10px 5px;\r\n    margin-top: 20px;\r\n    box-shadow: 1px -3px 10px 2px var(--fake-wood);\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n}\r\n\r\n#editor3 .checklist {\r\n    margin: 0.5rem;\r\n    margin-top: 0.8rem;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n}\r\n\r\n#checklist {\r\n    position: sticky;\r\n}\r\n\r\n#task {\r\n    width: 15rem;\r\n    margin-left: 1rem;\r\n    box-shadow: inset -1px -1px 2px 1px var(--fake-wood);\r\n    border: none;\r\n    border-radius: 0px;\r\n    background-color: var(--really-white);\r\n}\r\n\r\n#botonera-dialogo-tarea {\r\n    margin-top: 13px;\r\n    align-self: flex-end;\r\n}\r\n\r\n/** INTERFAZ **/\r\n/* CABECERA */\r\n#header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: aliceblue;\r\n    padding: 10px;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n\r\n#logo {\r\n    font-family: var(--inspiration);\r\n    font-size: 4rem;\r\n    margin-left: 10px;\r\n    text-shadow: 5px 5px 2px black;\r\n    margin-right: 40px;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: var(--lucid);\r\n    margin-right: 10px;\r\n    font-family: var(--noto-sherif);\r\n}\r\n\r\na:hover {\r\n    color: aliceblue;\r\n}\r\n\r\n/* WIDGET TIEMPO */\r\n#weather {\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr;\r\n    grid-template-rows: 4fr 1fr;\r\n    align-items: center;\r\n    height: 7.5rem;\r\n    width: 14rem;\r\n    color: var(--goldenlicious);\r\n}\r\n\r\n#temp-layout {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n#weather-temp {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n}\r\n\r\n#weather-loc {\r\n    text-align: center;\r\n}\r\n\r\n#weather-description {\r\n    grid-column: 1 / span 2;\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    place-self: center;\r\n}\r\n\r\n#anadir-lista {\r\n    height: 5rem;\r\n    width: 7rem;\r\n    color: var(--golden-way);\r\n}\r\n\r\n#anadir-lista:hover {\r\n    color: var(--goldenlicious);\r\n    background-color: var(--sunglasses);\r\n}\r\n\r\n#anadir-lista:active {\r\n    background-color: var(--secret);\r\n}\r\n\r\n/** LISTAS **/\r\n#main .card {\r\n    width: 24.8rem;\r\n    margin: 10px;\r\n    padding-bottom: 2px;\r\n}\r\n\r\n.cabecera {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.card>.cabecera {\r\n    margin: 2px 10px;\r\n}\r\n\r\n.nombre {\r\n    border: none;\r\n    flex: 1;\r\n    background-color: var(--white-chocolate);\r\n    height: 1.3rem;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.nombre,\r\nform .titulo {\r\n    margin-right: 5px;\r\n    font-weight: 600;\r\n    font-size: 1.3rem;\r\n    padding-bottom: 3px;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--coffee);\r\n}\r\n\r\n::placeholder {\r\n    color: var(--fake-wood);\r\n}\r\n\r\nbutton {\r\n    border-radius: 100px;\r\n    border: none;\r\n    background-color: transparent;\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    background-size: 1.2rem;\r\n}\r\n\r\n.card>.cabecera:hover button.eliminar {\r\n    background-image: url('../img/trash-can-outline.svg');\r\n}\r\n\r\n.card>.cabecera button.anadir {\r\n    background-image: url('../img/plus.svg');\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n}\r\n\r\n/** TAREAS **/\r\n.item {\r\n    margin: 3px;\r\n    border-radius: 13px;\r\n}\r\n\r\n.item>.cabecera {\r\n    background-color: var(--woody);\r\n}\r\n\r\n.item.show>.cabecera {\r\n    background-color: var(--brown-chocolate);\r\n    box-shadow: 0px 10px 7px -7px var(--fake-wood);\r\n}\r\n\r\n.item>.cabecera:hover .opener {\r\n    background-color: var(--coffee);\r\n}\r\n\r\n.item>.cabecera:hover {\r\n    background-color: var(--brown-chocolate);\r\n\r\n}\r\n\r\n.item>.cabecera:active {\r\n    background-color: var(--woody);\r\n}\r\n\r\n.item .opener {\r\n    border-radius: 50px;\r\n    background-image: url('../img/menu-right.svg');\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    margin: 3px;\r\n    animation-name: spinback;\r\n    animation-duration: 0.15s;\r\n    animation-fill-mode: forwards;\r\n}\r\n\r\n.item.show .opener {\r\n    animation-name: spin;\r\n    animation-duration: 0.25s;\r\n    animation-fill-mode: forwards;\r\n}\r\n\r\n@keyframes spin {\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(90deg);\r\n    }\r\n}\r\n\r\n@keyframes spinback {\r\n    from {\r\n        transform: rotate(90deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(0deg);\r\n    }\r\n}\r\n\r\n.item .prioridad {\r\n    border-radius: 100px;\r\n    width: 0.6rem;\r\n    height: 0.62rem;\r\n}\r\n\r\n.prioridad.alta {\r\n    background-color: red;\r\n}\r\n\r\n.prioridad.media {\r\n    background-color: orange;\r\n}\r\n\r\n.prioridad.baja {\r\n    background-color: green;\r\n}\r\n\r\n.item .titulo,\r\nform label {\r\n    flex: 1;\r\n    font-size: 0.9rem;\r\n    font-family: var(--noto-sherif);\r\n    font-style: oblique;\r\n    color: var(--dark-wood);\r\n    margin: 0px 8px;\r\n}\r\n\r\n.fecha {\r\n    font-size: 0.9rem;\r\n    font-weight: bolder;\r\n    font-family: var(--inspiration);\r\n    color: var(--really-white);\r\n    position: relative;\r\n    top: 1px;\r\n    margin: 0px 10px;\r\n}\r\n\r\n/* CONTENIDO TAREA */\r\n.item>.contenido {\r\n    background-color: floralwhite;\r\n    color: var(--coffee);\r\n    box-shadow: inset -3px -6px 10px 2px var(--fake-wood);\r\n    margin: 0px 0px 4px 0px;\r\n    max-height: 0rem;\r\n    transition: max-height 0.15s ease-out;\r\n    overflow: hidden;\r\n}\r\n\r\n.item.show>.contenido {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 100rem;\r\n    transition: max-height 0.25s ease-in;\r\n}\r\n\r\n.contenido * {\r\n    font-size: 0.7rem;\r\n    font-family: var(--noto-sherif);\r\n    color: var(--dark-wood);\r\n}\r\n\r\n.item .descripcion {\r\n    margin: 18px 18px 10px 18px;\r\n}\r\n\r\n/** CHECKLIST **/\r\n.checklist {\r\n    font-size: 0.7rem;\r\n    margin: 5px 22px 0px 30px;\r\n    overflow: scroll;\r\n    overflow-x: hidden;\r\n    max-height: 96rem;\r\n}\r\n\r\n.checklist::-webkit-scrollbar {\r\n    background-color: transparent;\r\n}\r\n\r\n.checklist::-webkit-scrollbar-thumb {\r\n    background-color: transparent;\r\n}\r\n\r\n/* CHECKBOX */\r\ninput[type=\"checkbox\"]+label:before {\r\n    position: relative;\r\n    bottom: 7px;\r\n    content: \"\";\r\n    width: 12px;\r\n    height: 12px;\r\n    float: left;\r\n    margin: 0.5em 0.5em 0 0;\r\n    border: 2px solid var(--goldenlicious);\r\n    background: white;\r\n    border-radius: 4px;\r\n}\r\n\r\ninput[type=\"checkbox\"]:hover+label:before {\r\n    border-color: var(--woody);\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked+label:before {\r\n    border-color: var(--soft-wood)\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked:hover+label:before {\r\n    border-color: var(--dark-wood)\r\n}\r\n\r\ninput[type=\"checkbox\"]:disabled+label:before {\r\n    background-color: var(--white-chocolate);\r\n    border-color: var(--golden-way)\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked+label:after {\r\n    content: \"\";\r\n    width: 0.7rem;\r\n    height: 0.10rem;\r\n    border: 3px solid var(--dark-wood);\r\n    float: left;\r\n    margin-left: -1.3rem;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    margin-top: 0.22rem;\r\n    transform: rotate(-55deg);\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked:disabled+label:after {\r\n    border-color: var(--goldenlicious)\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n    display: none;\r\n}\r\n\r\n/* SUBTAREA CHECKLIST */\r\n.task {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: center;\r\n}\r\n\r\n.task label {\r\n    flex: 1;\r\n}\r\n\r\n.task button.eliminar {\r\n    visibility: hidden;\r\n}\r\n\r\n#editor3 .task button.eliminar {\r\n    visibility: visible;\r\n    position: relative;\r\n    top: 1px;\r\n}\r\n\r\n#editor3 .task:hover {\r\n    background-color: var(--goldenlicious);\r\n}\r\n\r\n.contenido button.editar,\r\n.acciones button.editar {\r\n    width: 1.35rem;\r\n    height: 1.65rem;\r\n}\r\n\r\n.contenido button.editar {\r\n    bottom: 0.5rem;\r\n    left: 22.4rem;\r\n    position: relative;\r\n}\r\n\r\n.item .contenido:hover button.editar,\r\n.card>.acciones button.editar {\r\n    background-image: url('../img/pencil.svg');\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n/* FOOTER */\r\n#footer {\r\n    padding: 30px 25px;\r\n    margin-top: 20px;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/** MASCARAS ICONOS **/\r\n@supports (-webkit-mask: url(\"\")) or (mask: url(\"\")) {\r\n\r\n    /* FLECHA ABRIR TAREA */\r\n    .item .opener {\r\n        -webkit-mask: url('../img/menu-right.svg');\r\n        mask: url('../img/menu-right.svg');\r\n        background: antiquewhite;\r\n        width: 1.35rem;\r\n        height: 1.5rem;\r\n    }\r\n\r\n    .item>.cabecera:hover .opener {\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    /* COLORES BOTONES LISTA */\r\n    .card>.cabecera:hover button.eliminar,\r\n    .card>.cabecera:hover button.editar,\r\n    button.anadir,\r\n    button.ok {\r\n        background: var(--dark-wood);\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .card>.cabecera button.eliminar:hover,\r\n    .card>.cabecera button.editar:hover,\r\n    .card>.cabecera button.anadir:hover,\r\n    button.anadir:hover,\r\n    button.ok:hover {\r\n        background: var(--golden-way);\r\n    }\r\n\r\n    .card>.cabecera button.eliminar:active,\r\n    .card>.cabecera button.editar:active,\r\n    .card>.cabecera button.anadir:active,\r\n    button.anadir:active,\r\n    button.ok:active {\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    /* ACEPTAR */\r\n    button.ok {\r\n        -webkit-mask: url('../img/check.svg');\r\n        mask: url('../img/check.svg');\r\n        mask-size: cover;\r\n        width: 1.45rem;\r\n        height: 1.4rem;\r\n    }\r\n\r\n    /* EDITAR NOMBRE LISTA */\r\n    .card>.cabecera button.editar {\r\n        -webkit-mask: url('../img/pencil.svg');\r\n        mask: url('../img/pencil.svg');\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        width: 1.55rem;\r\n        height: 1.55rem;\r\n        position: relative;\r\n        top: 0.15rem;\r\n    }\r\n\r\n    /* ELIMINAR LISTA */\r\n    .card>.cabecera button.eliminar {\r\n        width: 1.6rem;\r\n        height: 1.35rem;\r\n        margin-bottom: 5px;\r\n        margin-left: 1px;\r\n        -webkit-mask: url('../img/trash-can-outline.svg');\r\n        mask: url('../img/trash-can-outline.svg');\r\n        mask-size: cover;\r\n    }\r\n\r\n    /* AÑADIR GENERAL */\r\n    button.anadir {\r\n        -webkit-mask: url('../img/plus.svg');\r\n        mask: url('../img/plus.svg');\r\n        mask-size: cover;\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    /* AÑADIR TAREA */\r\n    .card>.cabecera button.anadir {\r\n        width: 1.35rem;\r\n        height: 1.35rem;\r\n    }\r\n\r\n    /* ELIMINAR TAREA */\r\n    .item .cabecera button.eliminar,\r\n    .task button.eliminar {\r\n        margin: 0px 3px 0px 0px;\r\n        width: 1.45rem;\r\n        height: 1.3rem;\r\n    }\r\n\r\n    .item>.cabecera:hover button.eliminar,\r\n    .item.show>.cabecera button.eliminar,\r\n    .task:hover button.eliminar {\r\n        -webkit-mask: url('../img/window-close.svg');\r\n        mask: url('../img/window-close.svg');\r\n        mask-size: cover;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    .item>.cabecera button.eliminar:hover,\r\n    .task button.eliminar:hover {\r\n        background: var(--dark-wood);\r\n    }\r\n\r\n    .item>.cabecera button.eliminar:active,\r\n    .task button.eliminar:active {\r\n        background: var(--goldenlicious);\r\n    }\r\n\r\n    /* EDITAR TAREA  */\r\n    .item .contenido:hover button.editar {\r\n        -webkit-mask: url('../img/pencil.svg');\r\n        mask: url('../img/pencil.svg');\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        width: 1.65rem;\r\n        height: 1.65rem;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    .item .contenido button.editar:hover {\r\n        background: var(--golden-way);\r\n    }\r\n\r\n    .item .contenido button.editar:active {\r\n        background: var(--dark-wood);\r\n    }\r\n}\r\n\r\n/** MOVILES **/\r\n@media (max-width: 767.98px) {\r\n\r\n    #app {\r\n        background-position: 0rem;\r\n        padding: 5px;\r\n    }\r\n\r\n    #main,\r\n    #footer {\r\n        margin: 3px;\r\n        padding: 3px;\r\n    }\r\n\r\n    #main {\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    #header,\r\n    .header {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    #logo {\r\n        font-size: 3.5rem;\r\n        text-align: center;\r\n    }\r\n\r\n    #anadir-lista,\r\n    #weather {\r\n        height: 3rem;\r\n        border-radius: 5px;\r\n        background-color: var(--sunglasses);\r\n        margin-top: 20px;\r\n        padding: 5px;\r\n        width: 80vw;\r\n    }\r\n\r\n    #anadir-lista {\r\n    }\r\n\r\n    /* WIDGET TIEMPO */\r\n    #weather {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-template-rows: 3fr 1fr;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 6rem;\r\n        color: var(--goldenlicious);\r\n        padding: 10px;\r\n    }\r\n\r\n    #weather-image {\r\n        height: 5rem;\r\n        width: 5rem;\r\n        grid-column: 2;\r\n        grid-row: 1;\r\n        place-self: center;\r\n        background-size: cover;\r\n    }\r\n\r\n    #temp-layout {\r\n        grid-row: 1 / span 2;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    #weather-temp {\r\n        font-size: 3.2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        color: var(--golden-way);\r\n    }\r\n\r\n    #weather-loc {\r\n        font-size: 1.3rem;\r\n        text-align: center;\r\n        place-self: center;\r\n\r\n    }\r\n\r\n    #weather-description {\r\n        font-size: 0.8rem;\r\n        text-align: center;\r\n        place-self: center;\r\n        grid-column: 2;\r\n        grid-row: 2;\r\n        position: relative;\r\n        bottom: 0.3rem;\r\n    }\r\n\r\n    /* LISTAS */\r\n    .acciones {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n    }\r\n\r\n    .nombre {\r\n        width: 50vw;\r\n    }\r\n\r\n    /** LISTAS **/\r\n    #main .card,\r\n    .vitrina .card {\r\n        width: 80vw;\r\n    }\r\n\r\n    form.card {\r\n        margin-top: 10px;\r\n        position: sticky;\r\n        max-height: 33rem;\r\n    }\r\n\r\n    .item>.cabecera {\r\n        height: 2.6rem;\r\n    }\r\n\r\n    /* DIALOGOS */\r\n    .vitrina {\r\n        position: fixed;\r\n    }\r\n\r\n    .capa {\r\n        height: 80vh;\r\n    }\r\n\r\n    #editor2 label {\r\n        width: 10px;\r\n    }\r\n\r\n    #prioridad {\r\n        width: 50vw;\r\n        justify-self: end;\r\n    }\r\n\r\n    #prioridad label {\r\n        font-size: 0.8rem;\r\n        width: 8px;\r\n    }\r\n\r\n    /* COLORES BOTONES LISTA */\r\n    .card>.cabecera button.eliminar,\r\n    .card>.cabecera button.editar,\r\n    button.anadir,\r\n    button.ok {\r\n        background: var(--dark-wood);\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    /* ELIMINAR  */\r\n    .item>.cabecera button.eliminar,\r\n    .task button.eliminar {\r\n        -webkit-mask: url('../img/window-close.svg');\r\n        mask: url('../img/window-close.svg');\r\n        mask-size: cover;\r\n        background: var(--soft-wood);\r\n    }\r\n\r\n    /* EDITAR */\r\n    .card>.cabecera button.editar {\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n\r\n    /* EDITAR TAREA  */\r\n    .contenido button.editar {\r\n        -webkit-mask: url('../img/pencil.svg');\r\n        mask: url('../img/pencil.svg');\r\n        mask-size: cover;\r\n        background-repeat: no-repeat;\r\n        background: var(--soft-wood);\r\n        left: 70vw;\r\n    }\r\n}"],sourceRoot:""}]);const x=g},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,a,i){"string"==typeof r&&(r=[[null,r,void 0]]);var o={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var A=0;A<r.length;A++){var c=[].concat(r[A]);t&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */"),o=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}},621:(r,n,e)=>{function t(r,n){switch(r){case"P":return n.date({width:"short"});case"PP":return n.date({width:"medium"});case"PPP":return n.date({width:"long"});default:return n.date({width:"full"})}}function a(r,n){switch(r){case"p":return n.time({width:"short"});case"pp":return n.time({width:"medium"});case"ppp":return n.time({width:"long"});default:return n.time({width:"full"})}}e.d(n,{Z:()=>i});const i={p:a,P:function(r,n){var e,i=r.match(/(P+)(p+)?/)||[],o=i[1],s=i[2];if(!s)return t(r,n);switch(o){case"P":e=n.dateTime({width:"short"});break;case"PP":e=n.dateTime({width:"medium"});break;case"PPP":e=n.dateTime({width:"long"});break;default:e=n.dateTime({width:"full"})}return e.replace("{{date}}",t(o,n)).replace("{{time}}",a(s,n))}}},262:(r,n,e)=>{function t(r){var n=new Date(Date.UTC(r.getFullYear(),r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds(),r.getMilliseconds()));return n.setUTCFullYear(r.getFullYear()),r.getTime()-n.getTime()}e.d(n,{Z:()=>t})},702:(r,n,e)=>{e.d(n,{Z:()=>A});var t=e(13),a=e(979),i=e(32),o=e(882);function s(r){(0,o.Z)(1,arguments);var n=(0,i.Z)(r),e=new Date(0);e.setUTCFullYear(n,0,4),e.setUTCHours(0,0,0,0);var t=(0,a.Z)(e);return t}var d=6048e5;function A(r){(0,o.Z)(1,arguments);var n=(0,t.Z)(r),e=(0,a.Z)(n).getTime()-s(n).getTime();return Math.round(e/d)+1}},32:(r,n,e)=>{e.d(n,{Z:()=>o});var t=e(13),a=e(882),i=e(979);function o(r){(0,a.Z)(1,arguments);var n=(0,t.Z)(r),e=n.getUTCFullYear(),o=new Date(0);o.setUTCFullYear(e+1,0,4),o.setUTCHours(0,0,0,0);var s=(0,i.Z)(o),d=new Date(0);d.setUTCFullYear(e,0,4),d.setUTCHours(0,0,0,0);var A=(0,i.Z)(d);return n.getTime()>=s.getTime()?e+1:n.getTime()>=A.getTime()?e:e-1}},324:(r,n,e)=>{e.d(n,{Z:()=>c});var t=e(13),a=e(25),i=e(651),o=e(882),s=e(946);function d(r,n){(0,o.Z)(1,arguments);var e=n||{},t=e.locale,d=t&&t.options&&t.options.firstWeekContainsDate,A=null==d?1:(0,s.Z)(d),c=null==e.firstWeekContainsDate?A:(0,s.Z)(e.firstWeekContainsDate),l=(0,i.Z)(r,n),u=new Date(0);u.setUTCFullYear(l,0,c),u.setUTCHours(0,0,0,0);var h=(0,a.Z)(u,n);return h}var A=6048e5;function c(r,n){(0,o.Z)(1,arguments);var e=(0,t.Z)(r),i=(0,a.Z)(e,n).getTime()-d(e,n).getTime();return Math.round(i/A)+1}},651:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(13),a=e(882),i=e(25),o=e(946);function s(r,n){(0,a.Z)(1,arguments);var e=(0,t.Z)(r),s=e.getUTCFullYear(),d=n||{},A=d.locale,c=A&&A.options&&A.options.firstWeekContainsDate,l=null==c?1:(0,o.Z)(c),u=null==d.firstWeekContainsDate?l:(0,o.Z)(d.firstWeekContainsDate);if(!(u>=1&&u<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var h=new Date(0);h.setUTCFullYear(s+1,0,u),h.setUTCHours(0,0,0,0);var p=(0,i.Z)(h,n),m=new Date(0);m.setUTCFullYear(s,0,u),m.setUTCHours(0,0,0,0);var g=(0,i.Z)(m,n);return e.getTime()>=p.getTime()?s+1:e.getTime()>=g.getTime()?s:s-1}},267:(r,n,e)=>{e.d(n,{Do:()=>o,Iu:()=>i,qp:()=>s});var t=["D","DD"],a=["YY","YYYY"];function i(r){return-1!==t.indexOf(r)}function o(r){return-1!==a.indexOf(r)}function s(r,n,e){if("YYYY"===r)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://git.io/fxCyr"));if("YY"===r)throw new RangeError("Use `yy` instead of `YY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://git.io/fxCyr"));if("D"===r)throw new RangeError("Use `d` instead of `D` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://git.io/fxCyr"));if("DD"===r)throw new RangeError("Use `dd` instead of `DD` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://git.io/fxCyr"))}},882:(r,n,e)=>{function t(r,n){if(n.length<r)throw new TypeError(r+" argument"+(r>1?"s":"")+" required, but only "+n.length+" present")}e.d(n,{Z:()=>t})},979:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(13),a=e(882);function i(r){(0,a.Z)(1,arguments);var n=1,e=(0,t.Z)(r),i=e.getUTCDay(),o=(i<n?7:0)+i-n;return e.setUTCDate(e.getUTCDate()-o),e.setUTCHours(0,0,0,0),e}},25:(r,n,e)=>{e.d(n,{Z:()=>o});var t=e(13),a=e(882),i=e(946);function o(r,n){(0,a.Z)(1,arguments);var e=n||{},o=e.locale,s=o&&o.options&&o.options.weekStartsOn,d=null==s?0:(0,i.Z)(s),A=null==e.weekStartsOn?d:(0,i.Z)(e.weekStartsOn);if(!(A>=0&&A<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var c=(0,t.Z)(r),l=c.getUTCDay(),u=(l<A?7:0)+l-A;return c.setUTCDate(c.getUTCDate()-u),c.setUTCHours(0,0,0,0),c}},946:(r,n,e)=>{function t(r){if(null===r||!0===r||!1===r)return NaN;var n=Number(r);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}e.d(n,{Z:()=>t})},532:(r,n,e)=>{e.d(n,{Z:()=>O});var t=e(882);function a(r){return(0,t.Z)(1,arguments),r instanceof Date||"object"==typeof r&&"[object Date]"===Object.prototype.toString.call(r)}var i=e(13);function o(r){if((0,t.Z)(1,arguments),!a(r)&&"number"!=typeof r)return!1;var n=(0,i.Z)(r);return!isNaN(Number(n))}var s=e(958),d=e(558),A=864e5,c=e(702),l=e(32),u=e(324),h=e(651);function p(r,n){for(var e=r<0?"-":"",t=Math.abs(r).toString();t.length<n;)t="0"+t;return e+t}const m=function(r,n){var e=r.getUTCFullYear(),t=e>0?e:1-e;return p("yy"===n?t%100:t,n.length)},g=function(r,n){var e=r.getUTCMonth();return"M"===n?String(e+1):p(e+1,2)},f=function(r,n){return p(r.getUTCDate(),n.length)},C=function(r,n){return p(r.getUTCHours()%12||12,n.length)},b=function(r,n){return p(r.getUTCHours(),n.length)},B=function(r,n){return p(r.getUTCMinutes(),n.length)},w=function(r,n){return p(r.getUTCSeconds(),n.length)},v=function(r,n){var e=n.length,t=r.getUTCMilliseconds();return p(Math.floor(t*Math.pow(10,e-3)),n.length)};function I(r,n){var e=r>0?"-":"+",t=Math.abs(r),a=Math.floor(t/60),i=t%60;if(0===i)return e+String(a);var o=n||"";return e+String(a)+o+p(i,2)}function x(r,n){return r%60==0?(r>0?"-":"+")+p(Math.abs(r)/60,2):k(r,n)}function k(r,n){var e=n||"",t=r>0?"-":"+",a=Math.abs(r);return t+p(Math.floor(a/60),2)+e+p(a%60,2)}const y={G:function(r,n,e){var t=r.getUTCFullYear()>0?1:0;switch(n){case"G":case"GG":case"GGG":return e.era(t,{width:"abbreviated"});case"GGGGG":return e.era(t,{width:"narrow"});default:return e.era(t,{width:"wide"})}},y:function(r,n,e){if("yo"===n){var t=r.getUTCFullYear(),a=t>0?t:1-t;return e.ordinalNumber(a,{unit:"year"})}return m(r,n)},Y:function(r,n,e,t){var a=(0,h.Z)(r,t),i=a>0?a:1-a;return"YY"===n?p(i%100,2):"Yo"===n?e.ordinalNumber(i,{unit:"year"}):p(i,n.length)},R:function(r,n){return p((0,l.Z)(r),n.length)},u:function(r,n){return p(r.getUTCFullYear(),n.length)},Q:function(r,n,e){var t=Math.ceil((r.getUTCMonth()+1)/3);switch(n){case"Q":return String(t);case"QQ":return p(t,2);case"Qo":return e.ordinalNumber(t,{unit:"quarter"});case"QQQ":return e.quarter(t,{width:"abbreviated",context:"formatting"});case"QQQQQ":return e.quarter(t,{width:"narrow",context:"formatting"});default:return e.quarter(t,{width:"wide",context:"formatting"})}},q:function(r,n,e){var t=Math.ceil((r.getUTCMonth()+1)/3);switch(n){case"q":return String(t);case"qq":return p(t,2);case"qo":return e.ordinalNumber(t,{unit:"quarter"});case"qqq":return e.quarter(t,{width:"abbreviated",context:"standalone"});case"qqqqq":return e.quarter(t,{width:"narrow",context:"standalone"});default:return e.quarter(t,{width:"wide",context:"standalone"})}},M:function(r,n,e){var t=r.getUTCMonth();switch(n){case"M":case"MM":return g(r,n);case"Mo":return e.ordinalNumber(t+1,{unit:"month"});case"MMM":return e.month(t,{width:"abbreviated",context:"formatting"});case"MMMMM":return e.month(t,{width:"narrow",context:"formatting"});default:return e.month(t,{width:"wide",context:"formatting"})}},L:function(r,n,e){var t=r.getUTCMonth();switch(n){case"L":return String(t+1);case"LL":return p(t+1,2);case"Lo":return e.ordinalNumber(t+1,{unit:"month"});case"LLL":return e.month(t,{width:"abbreviated",context:"standalone"});case"LLLLL":return e.month(t,{width:"narrow",context:"standalone"});default:return e.month(t,{width:"wide",context:"standalone"})}},w:function(r,n,e,t){var a=(0,u.Z)(r,t);return"wo"===n?e.ordinalNumber(a,{unit:"week"}):p(a,n.length)},I:function(r,n,e){var t=(0,c.Z)(r);return"Io"===n?e.ordinalNumber(t,{unit:"week"}):p(t,n.length)},d:function(r,n,e){return"do"===n?e.ordinalNumber(r.getUTCDate(),{unit:"date"}):f(r,n)},D:function(r,n,e){var a=function(r){(0,t.Z)(1,arguments);var n=(0,i.Z)(r),e=n.getTime();n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0);var a=n.getTime(),o=e-a;return Math.floor(o/A)+1}(r);return"Do"===n?e.ordinalNumber(a,{unit:"dayOfYear"}):p(a,n.length)},E:function(r,n,e){var t=r.getUTCDay();switch(n){case"E":case"EE":case"EEE":return e.day(t,{width:"abbreviated",context:"formatting"});case"EEEEE":return e.day(t,{width:"narrow",context:"formatting"});case"EEEEEE":return e.day(t,{width:"short",context:"formatting"});default:return e.day(t,{width:"wide",context:"formatting"})}},e:function(r,n,e,t){var a=r.getUTCDay(),i=(a-t.weekStartsOn+8)%7||7;switch(n){case"e":return String(i);case"ee":return p(i,2);case"eo":return e.ordinalNumber(i,{unit:"day"});case"eee":return e.day(a,{width:"abbreviated",context:"formatting"});case"eeeee":return e.day(a,{width:"narrow",context:"formatting"});case"eeeeee":return e.day(a,{width:"short",context:"formatting"});default:return e.day(a,{width:"wide",context:"formatting"})}},c:function(r,n,e,t){var a=r.getUTCDay(),i=(a-t.weekStartsOn+8)%7||7;switch(n){case"c":return String(i);case"cc":return p(i,n.length);case"co":return e.ordinalNumber(i,{unit:"day"});case"ccc":return e.day(a,{width:"abbreviated",context:"standalone"});case"ccccc":return e.day(a,{width:"narrow",context:"standalone"});case"cccccc":return e.day(a,{width:"short",context:"standalone"});default:return e.day(a,{width:"wide",context:"standalone"})}},i:function(r,n,e){var t=r.getUTCDay(),a=0===t?7:t;switch(n){case"i":return String(a);case"ii":return p(a,n.length);case"io":return e.ordinalNumber(a,{unit:"day"});case"iii":return e.day(t,{width:"abbreviated",context:"formatting"});case"iiiii":return e.day(t,{width:"narrow",context:"formatting"});case"iiiiii":return e.day(t,{width:"short",context:"formatting"});default:return e.day(t,{width:"wide",context:"formatting"})}},a:function(r,n,e){var t=r.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"aaa":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},b:function(r,n,e){var t,a=r.getUTCHours();switch(t=12===a?"noon":0===a?"midnight":a/12>=1?"pm":"am",n){case"b":case"bb":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"bbb":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},B:function(r,n,e){var t,a=r.getUTCHours();switch(t=a>=17?"evening":a>=12?"afternoon":a>=4?"morning":"night",n){case"B":case"BB":case"BBB":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"BBBBB":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},h:function(r,n,e){if("ho"===n){var t=r.getUTCHours()%12;return 0===t&&(t=12),e.ordinalNumber(t,{unit:"hour"})}return C(r,n)},H:function(r,n,e){return"Ho"===n?e.ordinalNumber(r.getUTCHours(),{unit:"hour"}):b(r,n)},K:function(r,n,e){var t=r.getUTCHours()%12;return"Ko"===n?e.ordinalNumber(t,{unit:"hour"}):p(t,n.length)},k:function(r,n,e){var t=r.getUTCHours();return 0===t&&(t=24),"ko"===n?e.ordinalNumber(t,{unit:"hour"}):p(t,n.length)},m:function(r,n,e){return"mo"===n?e.ordinalNumber(r.getUTCMinutes(),{unit:"minute"}):B(r,n)},s:function(r,n,e){return"so"===n?e.ordinalNumber(r.getUTCSeconds(),{unit:"second"}):w(r,n)},S:function(r,n){return v(r,n)},X:function(r,n,e,t){var a=(t._originalDate||r).getTimezoneOffset();if(0===a)return"Z";switch(n){case"X":return x(a);case"XXXX":case"XX":return k(a);default:return k(a,":")}},x:function(r,n,e,t){var a=(t._originalDate||r).getTimezoneOffset();switch(n){case"x":return x(a);case"xxxx":case"xx":return k(a);default:return k(a,":")}},O:function(r,n,e,t){var a=(t._originalDate||r).getTimezoneOffset();switch(n){case"O":case"OO":case"OOO":return"GMT"+I(a,":");default:return"GMT"+k(a,":")}},z:function(r,n,e,t){var a=(t._originalDate||r).getTimezoneOffset();switch(n){case"z":case"zz":case"zzz":return"GMT"+I(a,":");default:return"GMT"+k(a,":")}},t:function(r,n,e,t){var a=t._originalDate||r;return p(Math.floor(a.getTime()/1e3),n.length)},T:function(r,n,e,t){return p((t._originalDate||r).getTime(),n.length)}};var E=e(621),T=e(262),D=e(267),M=e(946),S=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,Q=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,L=/^'([^]*?)'?$/,U=/''/g,Z=/[a-zA-Z]/;function O(r,n,e){(0,t.Z)(2,arguments);var a=String(n),A=e||{},c=A.locale||s.Z,l=c.options&&c.options.firstWeekContainsDate,u=null==l?1:(0,M.Z)(l),h=null==A.firstWeekContainsDate?u:(0,M.Z)(A.firstWeekContainsDate);if(!(h>=1&&h<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var p=c.options&&c.options.weekStartsOn,m=null==p?0:(0,M.Z)(p),g=null==A.weekStartsOn?m:(0,M.Z)(A.weekStartsOn);if(!(g>=0&&g<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!c.localize)throw new RangeError("locale must contain localize property");if(!c.formatLong)throw new RangeError("locale must contain formatLong property");var f=(0,i.Z)(r);if(!o(f))throw new RangeError("Invalid time value");var C=(0,T.Z)(f),b=(0,d.Z)(f,C),B={firstWeekContainsDate:h,weekStartsOn:g,locale:c,_originalDate:f},w=a.match(Q).map((function(r){var n=r[0];return"p"===n||"P"===n?(0,E.Z[n])(r,c.formatLong,B):r})).join("").match(S).map((function(e){if("''"===e)return"'";var t=e[0];if("'"===t)return N(e);var a=y[t];if(a)return!A.useAdditionalWeekYearTokens&&(0,D.Do)(e)&&(0,D.qp)(e,n,r),!A.useAdditionalDayOfYearTokens&&(0,D.Iu)(e)&&(0,D.qp)(e,n,r),a(b,e,c.localize,B);if(t.match(Z))throw new RangeError("Format string contains an unescaped latin alphabet character `"+t+"`");return e})).join("");return w}function N(r){return r.match(L)[1].replace(U,"'")}},958:(r,n,e)=>{e.d(n,{Z:()=>u});var t={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function a(r){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.width?String(n.width):r.defaultWidth,t=r.formats[e]||r.formats[r.defaultWidth];return t}}var i,o={date:a({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:a({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:a({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},s={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function d(r){return function(n,e){var t,a=e||{};if("formatting"===(a.context?String(a.context):"standalone")&&r.formattingValues){var i=r.defaultFormattingWidth||r.defaultWidth,o=a.width?String(a.width):i;t=r.formattingValues[o]||r.formattingValues[i]}else{var s=r.defaultWidth,d=a.width?String(a.width):r.defaultWidth;t=r.values[d]||r.values[s]}return t[r.argumentCallback?r.argumentCallback(n):n]}}function A(r){return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.width,a=t&&r.matchPatterns[t]||r.matchPatterns[r.defaultMatchWidth],i=n.match(a);if(!i)return null;var o,s=i[0],d=t&&r.parsePatterns[t]||r.parsePatterns[r.defaultParseWidth],A=Array.isArray(d)?l(d,(function(r){return r.test(s)})):c(d,(function(r){return r.test(s)}));o=r.valueCallback?r.valueCallback(A):A,o=e.valueCallback?e.valueCallback(o):o;var u=n.slice(s.length);return{value:o,rest:u}}}function c(r,n){for(var e in r)if(r.hasOwnProperty(e)&&n(r[e]))return e}function l(r,n){for(var e=0;e<r.length;e++)if(n(r[e]))return e}const u={code:"en-US",formatDistance:function(r,n,e){var a,i=t[r];return a="string"==typeof i?i:1===n?i.one:i.other.replace("{{count}}",n.toString()),null!=e&&e.addSuffix?e.comparison&&e.comparison>0?"in "+a:a+" ago":a},formatLong:o,formatRelative:function(r,n,e,t){return s[r]},localize:{ordinalNumber:function(r,n){var e=Number(r),t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},era:d({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:d({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(r){return r-1}}),month:d({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:d({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:d({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(i={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(r){return parseInt(r,10)}},function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=r.match(i.matchPattern);if(!e)return null;var t=e[0],a=r.match(i.parsePattern);if(!a)return null;var o=i.valueCallback?i.valueCallback(a[0]):a[0];o=n.valueCallback?n.valueCallback(o):o;var s=r.slice(t.length);return{value:o,rest:s}}),era:A({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:A({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(r){return r+1}}),month:A({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:A({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:A({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}}},853:(r,n,e)=>{e.d(n,{Z:()=>ir});var t=e(958),a=e(558),i=e(13);function o(r,n){if(null==r)throw new TypeError("assign requires that input parameter not be null or undefined");for(var e in n=n||{})Object.prototype.hasOwnProperty.call(n,e)&&(r[e]=n[e]);return r}var s=e(621),d=e(262),A=e(267),c=e(946),l=e(651),u=e(882);function h(r,n,e){(0,u.Z)(2,arguments);var t=e||{},a=t.locale,o=a&&a.options&&a.options.weekStartsOn,s=null==o?0:(0,c.Z)(o),d=null==t.weekStartsOn?s:(0,c.Z)(t.weekStartsOn);if(!(d>=0&&d<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var A=(0,i.Z)(r),l=(0,c.Z)(n),h=A.getUTCDay(),p=l%7,m=(p+7)%7,g=(m<d?7:0)+l-h;return A.setUTCDate(A.getUTCDate()+g),A}var p=e(702),m=e(324),g=e(979),f=e(25),C=/^(1[0-2]|0?\d)/,b=/^(3[0-1]|[0-2]?\d)/,B=/^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,w=/^(5[0-3]|[0-4]?\d)/,v=/^(2[0-3]|[0-1]?\d)/,I=/^(2[0-4]|[0-1]?\d)/,x=/^(1[0-1]|0?\d)/,k=/^(1[0-2]|0?\d)/,y=/^[0-5]?\d/,E=/^[0-5]?\d/,T=/^\d/,D=/^\d{1,2}/,M=/^\d{1,3}/,S=/^\d{1,4}/,Q=/^-?\d+/,L=/^-?\d/,U=/^-?\d{1,2}/,Z=/^-?\d{1,3}/,O=/^-?\d{1,4}/,N=/^([+-])(\d{2})(\d{2})?|Z/,Y=/^([+-])(\d{2})(\d{2})|Z/,R=/^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,j=/^([+-])(\d{2}):(\d{2})|Z/,q=/^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/;function P(r,n,e){var t=n.match(r);if(!t)return null;var a=parseInt(t[0],10);return{value:e?e(a):a,rest:n.slice(t[0].length)}}function z(r,n){var e=n.match(r);return e?"Z"===e[0]?{value:0,rest:n.slice(1)}:{value:("+"===e[1]?1:-1)*(36e5*(e[2]?parseInt(e[2],10):0)+6e4*(e[3]?parseInt(e[3],10):0)+1e3*(e[5]?parseInt(e[5],10):0)),rest:n.slice(e[0].length)}:null}function W(r,n){return P(Q,r,n)}function H(r,n,e){switch(r){case 1:return P(T,n,e);case 2:return P(D,n,e);case 3:return P(M,n,e);case 4:return P(S,n,e);default:return P(new RegExp("^\\d{1,"+r+"}"),n,e)}}function X(r,n,e){switch(r){case 1:return P(L,n,e);case 2:return P(U,n,e);case 3:return P(Z,n,e);case 4:return P(O,n,e);default:return P(new RegExp("^-?\\d{1,"+r+"}"),n,e)}}function F(r){switch(r){case"morning":return 4;case"evening":return 17;case"pm":case"noon":case"afternoon":return 12;default:return 0}}function $(r,n){var e,t=n>0,a=t?n:1-n;if(a<=50)e=r||100;else{var i=a+50;e=r+100*Math.floor(i/100)-(r>=i%100?100:0)}return t?e:1-e}var _=[31,28,31,30,31,30,31,31,30,31,30,31],G=[31,29,31,30,31,30,31,31,30,31,30,31];function J(r){return r%400==0||r%4==0&&r%100!=0}const K={G:{priority:140,parse:function(r,n,e,t){switch(n){case"G":case"GG":case"GGG":return e.era(r,{width:"abbreviated"})||e.era(r,{width:"narrow"});case"GGGGG":return e.era(r,{width:"narrow"});default:return e.era(r,{width:"wide"})||e.era(r,{width:"abbreviated"})||e.era(r,{width:"narrow"})}},set:function(r,n,e,t){return n.era=e,r.setUTCFullYear(e,0,1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["R","u","t","T"]},y:{priority:130,parse:function(r,n,e,t){var a=function(r){return{year:r,isTwoDigitYear:"yy"===n}};switch(n){case"y":return H(4,r,a);case"yo":return e.ordinalNumber(r,{unit:"year",valueCallback:a});default:return H(n.length,r,a)}},validate:function(r,n,e){return n.isTwoDigitYear||n.year>0},set:function(r,n,e,t){var a=r.getUTCFullYear();if(e.isTwoDigitYear){var i=$(e.year,a);return r.setUTCFullYear(i,0,1),r.setUTCHours(0,0,0,0),r}var o="era"in n&&1!==n.era?1-e.year:e.year;return r.setUTCFullYear(o,0,1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","u","w","I","i","e","c","t","T"]},Y:{priority:130,parse:function(r,n,e,t){var a=function(r){return{year:r,isTwoDigitYear:"YY"===n}};switch(n){case"Y":return H(4,r,a);case"Yo":return e.ordinalNumber(r,{unit:"year",valueCallback:a});default:return H(n.length,r,a)}},validate:function(r,n,e){return n.isTwoDigitYear||n.year>0},set:function(r,n,e,t){var a=(0,l.Z)(r,t);if(e.isTwoDigitYear){var i=$(e.year,a);return r.setUTCFullYear(i,0,t.firstWeekContainsDate),r.setUTCHours(0,0,0,0),(0,f.Z)(r,t)}var o="era"in n&&1!==n.era?1-e.year:e.year;return r.setUTCFullYear(o,0,t.firstWeekContainsDate),r.setUTCHours(0,0,0,0),(0,f.Z)(r,t)},incompatibleTokens:["y","R","u","Q","q","M","L","I","d","D","i","t","T"]},R:{priority:130,parse:function(r,n,e,t){return X("R"===n?4:n.length,r)},set:function(r,n,e,t){var a=new Date(0);return a.setUTCFullYear(e,0,4),a.setUTCHours(0,0,0,0),(0,g.Z)(a)},incompatibleTokens:["G","y","Y","u","Q","q","M","L","w","d","D","e","c","t","T"]},u:{priority:130,parse:function(r,n,e,t){return X("u"===n?4:n.length,r)},set:function(r,n,e,t){return r.setUTCFullYear(e,0,1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["G","y","Y","R","w","I","i","e","c","t","T"]},Q:{priority:120,parse:function(r,n,e,t){switch(n){case"Q":case"QQ":return H(n.length,r);case"Qo":return e.ordinalNumber(r,{unit:"quarter"});case"QQQ":return e.quarter(r,{width:"abbreviated",context:"formatting"})||e.quarter(r,{width:"narrow",context:"formatting"});case"QQQQQ":return e.quarter(r,{width:"narrow",context:"formatting"});default:return e.quarter(r,{width:"wide",context:"formatting"})||e.quarter(r,{width:"abbreviated",context:"formatting"})||e.quarter(r,{width:"narrow",context:"formatting"})}},validate:function(r,n,e){return n>=1&&n<=4},set:function(r,n,e,t){return r.setUTCMonth(3*(e-1),1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","q","M","L","w","I","d","D","i","e","c","t","T"]},q:{priority:120,parse:function(r,n,e,t){switch(n){case"q":case"qq":return H(n.length,r);case"qo":return e.ordinalNumber(r,{unit:"quarter"});case"qqq":return e.quarter(r,{width:"abbreviated",context:"standalone"})||e.quarter(r,{width:"narrow",context:"standalone"});case"qqqqq":return e.quarter(r,{width:"narrow",context:"standalone"});default:return e.quarter(r,{width:"wide",context:"standalone"})||e.quarter(r,{width:"abbreviated",context:"standalone"})||e.quarter(r,{width:"narrow",context:"standalone"})}},validate:function(r,n,e){return n>=1&&n<=4},set:function(r,n,e,t){return r.setUTCMonth(3*(e-1),1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","Q","M","L","w","I","d","D","i","e","c","t","T"]},M:{priority:110,parse:function(r,n,e,t){var a=function(r){return r-1};switch(n){case"M":return P(C,r,a);case"MM":return H(2,r,a);case"Mo":return e.ordinalNumber(r,{unit:"month",valueCallback:a});case"MMM":return e.month(r,{width:"abbreviated",context:"formatting"})||e.month(r,{width:"narrow",context:"formatting"});case"MMMMM":return e.month(r,{width:"narrow",context:"formatting"});default:return e.month(r,{width:"wide",context:"formatting"})||e.month(r,{width:"abbreviated",context:"formatting"})||e.month(r,{width:"narrow",context:"formatting"})}},validate:function(r,n,e){return n>=0&&n<=11},set:function(r,n,e,t){return r.setUTCMonth(e,1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","q","Q","L","w","I","D","i","e","c","t","T"]},L:{priority:110,parse:function(r,n,e,t){var a=function(r){return r-1};switch(n){case"L":return P(C,r,a);case"LL":return H(2,r,a);case"Lo":return e.ordinalNumber(r,{unit:"month",valueCallback:a});case"LLL":return e.month(r,{width:"abbreviated",context:"standalone"})||e.month(r,{width:"narrow",context:"standalone"});case"LLLLL":return e.month(r,{width:"narrow",context:"standalone"});default:return e.month(r,{width:"wide",context:"standalone"})||e.month(r,{width:"abbreviated",context:"standalone"})||e.month(r,{width:"narrow",context:"standalone"})}},validate:function(r,n,e){return n>=0&&n<=11},set:function(r,n,e,t){return r.setUTCMonth(e,1),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","q","Q","M","w","I","D","i","e","c","t","T"]},w:{priority:100,parse:function(r,n,e,t){switch(n){case"w":return P(w,r);case"wo":return e.ordinalNumber(r,{unit:"week"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=1&&n<=53},set:function(r,n,e,t){return(0,f.Z)(function(r,n,e){(0,u.Z)(2,arguments);var t=(0,i.Z)(r),a=(0,c.Z)(n),o=(0,m.Z)(t,e)-a;return t.setUTCDate(t.getUTCDate()-7*o),t}(r,e,t),t)},incompatibleTokens:["y","R","u","q","Q","M","L","I","d","D","i","t","T"]},I:{priority:100,parse:function(r,n,e,t){switch(n){case"I":return P(w,r);case"Io":return e.ordinalNumber(r,{unit:"week"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=1&&n<=53},set:function(r,n,e,t){return(0,g.Z)(function(r,n){(0,u.Z)(2,arguments);var e=(0,i.Z)(r),t=(0,c.Z)(n),a=(0,p.Z)(e)-t;return e.setUTCDate(e.getUTCDate()-7*a),e}(r,e,t),t)},incompatibleTokens:["y","Y","u","q","Q","M","L","w","d","D","e","c","t","T"]},d:{priority:90,subPriority:1,parse:function(r,n,e,t){switch(n){case"d":return P(b,r);case"do":return e.ordinalNumber(r,{unit:"date"});default:return H(n.length,r)}},validate:function(r,n,e){var t=J(r.getUTCFullYear()),a=r.getUTCMonth();return t?n>=1&&n<=G[a]:n>=1&&n<=_[a]},set:function(r,n,e,t){return r.setUTCDate(e),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","q","Q","w","I","D","i","e","c","t","T"]},D:{priority:90,subPriority:1,parse:function(r,n,e,t){switch(n){case"D":case"DD":return P(B,r);case"Do":return e.ordinalNumber(r,{unit:"date"});default:return H(n.length,r)}},validate:function(r,n,e){return J(r.getUTCFullYear())?n>=1&&n<=366:n>=1&&n<=365},set:function(r,n,e,t){return r.setUTCMonth(0,e),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["Y","R","q","Q","M","L","w","I","d","E","i","e","c","t","T"]},E:{priority:90,parse:function(r,n,e,t){switch(n){case"E":case"EE":case"EEE":return e.day(r,{width:"abbreviated",context:"formatting"})||e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"});case"EEEEE":return e.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})||e.day(r,{width:"abbreviated",context:"formatting"})||e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"})}},validate:function(r,n,e){return n>=0&&n<=6},set:function(r,n,e,t){return(r=h(r,e,t)).setUTCHours(0,0,0,0),r},incompatibleTokens:["D","i","e","c","t","T"]},e:{priority:90,parse:function(r,n,e,t){var a=function(r){var n=7*Math.floor((r-1)/7);return(r+t.weekStartsOn+6)%7+n};switch(n){case"e":case"ee":return H(n.length,r,a);case"eo":return e.ordinalNumber(r,{unit:"day",valueCallback:a});case"eee":return e.day(r,{width:"abbreviated",context:"formatting"})||e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"});case"eeeee":return e.day(r,{width:"narrow",context:"formatting"});case"eeeeee":return e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})||e.day(r,{width:"abbreviated",context:"formatting"})||e.day(r,{width:"short",context:"formatting"})||e.day(r,{width:"narrow",context:"formatting"})}},validate:function(r,n,e){return n>=0&&n<=6},set:function(r,n,e,t){return(r=h(r,e,t)).setUTCHours(0,0,0,0),r},incompatibleTokens:["y","R","u","q","Q","M","L","I","d","D","E","i","c","t","T"]},c:{priority:90,parse:function(r,n,e,t){var a=function(r){var n=7*Math.floor((r-1)/7);return(r+t.weekStartsOn+6)%7+n};switch(n){case"c":case"cc":return H(n.length,r,a);case"co":return e.ordinalNumber(r,{unit:"day",valueCallback:a});case"ccc":return e.day(r,{width:"abbreviated",context:"standalone"})||e.day(r,{width:"short",context:"standalone"})||e.day(r,{width:"narrow",context:"standalone"});case"ccccc":return e.day(r,{width:"narrow",context:"standalone"});case"cccccc":return e.day(r,{width:"short",context:"standalone"})||e.day(r,{width:"narrow",context:"standalone"});default:return e.day(r,{width:"wide",context:"standalone"})||e.day(r,{width:"abbreviated",context:"standalone"})||e.day(r,{width:"short",context:"standalone"})||e.day(r,{width:"narrow",context:"standalone"})}},validate:function(r,n,e){return n>=0&&n<=6},set:function(r,n,e,t){return(r=h(r,e,t)).setUTCHours(0,0,0,0),r},incompatibleTokens:["y","R","u","q","Q","M","L","I","d","D","E","i","e","t","T"]},i:{priority:90,parse:function(r,n,e,t){var a=function(r){return 0===r?7:r};switch(n){case"i":case"ii":return H(n.length,r);case"io":return e.ordinalNumber(r,{unit:"day"});case"iii":return e.day(r,{width:"abbreviated",context:"formatting",valueCallback:a})||e.day(r,{width:"short",context:"formatting",valueCallback:a})||e.day(r,{width:"narrow",context:"formatting",valueCallback:a});case"iiiii":return e.day(r,{width:"narrow",context:"formatting",valueCallback:a});case"iiiiii":return e.day(r,{width:"short",context:"formatting",valueCallback:a})||e.day(r,{width:"narrow",context:"formatting",valueCallback:a});default:return e.day(r,{width:"wide",context:"formatting",valueCallback:a})||e.day(r,{width:"abbreviated",context:"formatting",valueCallback:a})||e.day(r,{width:"short",context:"formatting",valueCallback:a})||e.day(r,{width:"narrow",context:"formatting",valueCallback:a})}},validate:function(r,n,e){return n>=1&&n<=7},set:function(r,n,e,t){return r=function(r,n){(0,u.Z)(2,arguments);var e=(0,c.Z)(n);e%7==0&&(e-=7);var t=1,a=(0,i.Z)(r),o=a.getUTCDay(),s=((e%7+7)%7<t?7:0)+e-o;return a.setUTCDate(a.getUTCDate()+s),a}(r,e,t),r.setUTCHours(0,0,0,0),r},incompatibleTokens:["y","Y","u","q","Q","M","L","w","d","D","E","e","c","t","T"]},a:{priority:80,parse:function(r,n,e,t){switch(n){case"a":case"aa":case"aaa":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"});case"aaaaa":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})||e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"})}},set:function(r,n,e,t){return r.setUTCHours(F(e),0,0,0),r},incompatibleTokens:["b","B","H","k","t","T"]},b:{priority:80,parse:function(r,n,e,t){switch(n){case"b":case"bb":case"bbb":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"});case"bbbbb":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})||e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"})}},set:function(r,n,e,t){return r.setUTCHours(F(e),0,0,0),r},incompatibleTokens:["a","B","H","k","t","T"]},B:{priority:80,parse:function(r,n,e,t){switch(n){case"B":case"BB":case"BBB":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"});case"BBBBB":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})||e.dayPeriod(r,{width:"abbreviated",context:"formatting"})||e.dayPeriod(r,{width:"narrow",context:"formatting"})}},set:function(r,n,e,t){return r.setUTCHours(F(e),0,0,0),r},incompatibleTokens:["a","b","t","T"]},h:{priority:70,parse:function(r,n,e,t){switch(n){case"h":return P(k,r);case"ho":return e.ordinalNumber(r,{unit:"hour"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=1&&n<=12},set:function(r,n,e,t){var a=r.getUTCHours()>=12;return a&&e<12?r.setUTCHours(e+12,0,0,0):a||12!==e?r.setUTCHours(e,0,0,0):r.setUTCHours(0,0,0,0),r},incompatibleTokens:["H","K","k","t","T"]},H:{priority:70,parse:function(r,n,e,t){switch(n){case"H":return P(v,r);case"Ho":return e.ordinalNumber(r,{unit:"hour"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=0&&n<=23},set:function(r,n,e,t){return r.setUTCHours(e,0,0,0),r},incompatibleTokens:["a","b","h","K","k","t","T"]},K:{priority:70,parse:function(r,n,e,t){switch(n){case"K":return P(x,r);case"Ko":return e.ordinalNumber(r,{unit:"hour"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=0&&n<=11},set:function(r,n,e,t){return r.getUTCHours()>=12&&e<12?r.setUTCHours(e+12,0,0,0):r.setUTCHours(e,0,0,0),r},incompatibleTokens:["h","H","k","t","T"]},k:{priority:70,parse:function(r,n,e,t){switch(n){case"k":return P(I,r);case"ko":return e.ordinalNumber(r,{unit:"hour"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=1&&n<=24},set:function(r,n,e,t){var a=e<=24?e%24:e;return r.setUTCHours(a,0,0,0),r},incompatibleTokens:["a","b","h","H","K","t","T"]},m:{priority:60,parse:function(r,n,e,t){switch(n){case"m":return P(y,r);case"mo":return e.ordinalNumber(r,{unit:"minute"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=0&&n<=59},set:function(r,n,e,t){return r.setUTCMinutes(e,0,0),r},incompatibleTokens:["t","T"]},s:{priority:50,parse:function(r,n,e,t){switch(n){case"s":return P(E,r);case"so":return e.ordinalNumber(r,{unit:"second"});default:return H(n.length,r)}},validate:function(r,n,e){return n>=0&&n<=59},set:function(r,n,e,t){return r.setUTCSeconds(e,0),r},incompatibleTokens:["t","T"]},S:{priority:30,parse:function(r,n,e,t){return H(n.length,r,(function(r){return Math.floor(r*Math.pow(10,3-n.length))}))},set:function(r,n,e,t){return r.setUTCMilliseconds(e),r},incompatibleTokens:["t","T"]},X:{priority:10,parse:function(r,n,e,t){switch(n){case"X":return z(N,r);case"XX":return z(Y,r);case"XXXX":return z(R,r);case"XXXXX":return z(q,r);default:return z(j,r)}},set:function(r,n,e,t){return n.timestampIsSet?r:new Date(r.getTime()-e)},incompatibleTokens:["t","T","x"]},x:{priority:10,parse:function(r,n,e,t){switch(n){case"x":return z(N,r);case"xx":return z(Y,r);case"xxxx":return z(R,r);case"xxxxx":return z(q,r);default:return z(j,r)}},set:function(r,n,e,t){return n.timestampIsSet?r:new Date(r.getTime()-e)},incompatibleTokens:["t","T","X"]},t:{priority:40,parse:function(r,n,e,t){return W(r)},set:function(r,n,e,t){return[new Date(1e3*e),{timestampIsSet:!0}]},incompatibleTokens:"*"},T:{priority:20,parse:function(r,n,e,t){return W(r)},set:function(r,n,e,t){return[new Date(e),{timestampIsSet:!0}]},incompatibleTokens:"*"}};var V=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,rr=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,nr=/^'([^]*?)'?$/,er=/''/g,tr=/\S/,ar=/[a-zA-Z]/;function ir(r,n,e,l){(0,u.Z)(3,arguments);var h=String(r),p=String(n),m=l||{},g=m.locale||t.Z;if(!g.match)throw new RangeError("locale must contain match property");var f=g.options&&g.options.firstWeekContainsDate,C=null==f?1:(0,c.Z)(f),b=null==m.firstWeekContainsDate?C:(0,c.Z)(m.firstWeekContainsDate);if(!(b>=1&&b<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var B=g.options&&g.options.weekStartsOn,w=null==B?0:(0,c.Z)(B),v=null==m.weekStartsOn?w:(0,c.Z)(m.weekStartsOn);if(!(v>=0&&v<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(""===p)return""===h?(0,i.Z)(e):new Date(NaN);var I,x={firstWeekContainsDate:b,weekStartsOn:v,locale:g},k=[{priority:10,subPriority:-1,set:or,index:0}],y=p.match(rr).map((function(r){var n=r[0];return"p"===n||"P"===n?(0,s.Z[n])(r,g.formatLong,x):r})).join("").match(V),E=[];for(I=0;I<y.length;I++){var T=y[I];!m.useAdditionalWeekYearTokens&&(0,A.Do)(T)&&(0,A.qp)(T,p,r),!m.useAdditionalDayOfYearTokens&&(0,A.Iu)(T)&&(0,A.qp)(T,p,r);var D=T[0],M=K[D];if(M){var S=M.incompatibleTokens;if(Array.isArray(S)){for(var Q=void 0,L=0;L<E.length;L++){var U=E[L].token;if(-1!==S.indexOf(U)||U===D){Q=E[L];break}}if(Q)throw new RangeError("The format string mustn't contain `".concat(Q.fullToken,"` and `").concat(T,"` at the same time"))}else if("*"===M.incompatibleTokens&&E.length)throw new RangeError("The format string mustn't contain `".concat(T,"` and any other token at the same time"));E.push({token:D,fullToken:T});var Z=M.parse(h,T,g.match,x);if(!Z)return new Date(NaN);k.push({priority:M.priority,subPriority:M.subPriority||0,set:M.set,validate:M.validate,value:Z.value,index:k.length}),h=Z.rest}else{if(D.match(ar))throw new RangeError("Format string contains an unescaped latin alphabet character `"+D+"`");if("''"===T?T="'":"'"===D&&(T=sr(T)),0!==h.indexOf(T))return new Date(NaN);h=h.slice(T.length)}}if(h.length>0&&tr.test(h))return new Date(NaN);var O=k.map((function(r){return r.priority})).sort((function(r,n){return n-r})).filter((function(r,n,e){return e.indexOf(r)===n})).map((function(r){return k.filter((function(n){return n.priority===r})).sort((function(r,n){return n.subPriority-r.subPriority}))})).map((function(r){return r[0]})),N=(0,i.Z)(e);if(isNaN(N))return new Date(NaN);var Y=(0,a.Z)(N,(0,d.Z)(N)),R={};for(I=0;I<O.length;I++){var j=O[I];if(j.validate&&!j.validate(Y,j.value,x))return new Date(NaN);var q=j.set(Y,R,j.value,x);q[0]?(Y=q[0],o(R,q[1])):Y=q}return Y}function or(r,n){if(n.timestampIsSet)return r;var e=new Date(0);return e.setFullYear(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate()),e.setHours(r.getUTCHours(),r.getUTCMinutes(),r.getUTCSeconds(),r.getUTCMilliseconds()),e}function sr(r){return r.match(nr)[1].replace(er,"'")}},558:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(946),a=e(13),i=e(882);function o(r,n){(0,i.Z)(2,arguments);var e=(0,a.Z)(r).getTime(),o=(0,t.Z)(n);return new Date(e+o)}function s(r,n){(0,i.Z)(2,arguments);var e=(0,t.Z)(n);return o(r,-e)}},13:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(882);function a(r){(0,t.Z)(1,arguments);var n=Object.prototype.toString.call(r);return r instanceof Date||"object"==typeof r&&"[object Date]"===n?new Date(r.getTime()):"number"==typeof r||"[object Number]"===n?new Date(r):("string"!=typeof r&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},o=[],s=0;s<r.length;s++){var d=r[s],A=t.base?d[0]+t.base:d[0],c=i[A]||0,l="".concat(A," ").concat(c);i[A]=c+1;var u=e(l),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(h);else{var p=a(h,t);t.byIndex=s,n.splice(s,0,{identifier:l,updater:p,references:1})}o.push(l)}return o}function a(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,a){var i=t(r=r||[],a=a||{});return function(r){r=r||[];for(var o=0;o<i.length;o++){var s=e(i[o]);n[s].references--}for(var d=t(r,a),A=0;A<i.length;A++){var c=e(i[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=d}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},343:(r,n,e)=>{e.d(n,{Z:()=>o});var t=e(500),a=e(853),i=e(532);class o{constructor(r,n,e){this.screen=r,this.interfaz=n,this.viewmodel=e}setLayout(r){this.app=r}show(r,...n){var e;switch(r){case"dialogo-bienvenida":e=this.DialogoBienvenida();break;case"dialogo-confirmacion":e=this.DialogoConfirmacion(...n);break;case"dialogo-informacion":e=this.DialogoInformacion(n[0]);break;case"dialogo-tareas":e=this.EditorTareas(n[0],n[1],n[2])}this.screen.colocarDialogo(this.app,e)}DialogoBienvenida(){const r="dialogo-bienvenida",n=this.screen.createElement("form",r,"card","");this.screen.appendChild(n,"span","","titulo",`¡Bienvenido a ${this.viewmodel.appName}!`);var e=this.screen.appendChild(n,"div","editor-usuario","","");this.screen.appendChild(e,"label","","","Escoge tu alias").setAttribute("for","alias");const t=this.screen.appendChild(e,"input","titulo","","");t.setAttribute("maxlength","25"),t.setAttribute("value",this.viewmodel.usuario??" "),t.setAttribute("name","alias"),this.screen.moveCursorToEnd(t);const a=this.screen.appendChild(n,"div","","botonera-dialogo","");return document.getElementsByTagName("body")[0],this.viewmodel.usuario&&this.screen.appendChild(a,"button","borrar-datos","borrar","Borrar datos").addEventListener("click",(r=>{r.preventDefault();const n=this,e=this.DialogoConfirmacion("¿Deseas eliminar todos tus datos de forma permanente?",(function(){n.app=n.interfaz.reiniciarPrograma();const r=n.DialogoInformacion("Sus datos han sido eliminados con éxito");n.screen.colocarDialogo(n.app,r)}));this.screen.colocarDialogo(this.app,e)})),this.screen.appendChild(a,"button","add-tarea","aceptar","Aceptar").addEventListener("click",(e=>{e.preventDefault(),this.viewmodel.setUsuario(t.value),document.getElementById("saludo").textContent=this.viewmodel.saludo+" "+this.viewmodel.usuario,this.screen.removeDialogo(this.app,n,r)})),n}DialogoConfirmacion(r,n,...e){const t="dialogo-confirmacion",a=this.screen.createElement("form",t,"card","");this.screen.appendChild(a,"span","","titulo",r);const i=this.screen.appendChild(a,"div","","botonera-dialogo","");return this.screen.appendChild(i,"button","cancelar-tarea","cancelar","Cancelar").addEventListener("click",(r=>{this.screen.removeDialogo(this.app,a,t)})),this.screen.appendChild(i,"button","add-tarea","aceptar","Aceptar").addEventListener("click",(r=>{r.preventDefault(),this.screen.removeDialogo(this.app,a,t),n(...e)})),a}DialogoInformacion(r){const n="dialogo-informacion",e=this.screen.createElement("form",n,"card","");this.screen.appendChild(e,"span","","titulo",r);const t=this.screen.appendChild(e,"div","","botonera-dialogo","");return this.screen.appendChild(t,"button","add-tarea","aceptar","Aceptar").addEventListener("click",(r=>{r.preventDefault(),this.screen.removeDialogo(this.app,e,n)})),e}EditorTareas(r,n,e){const o="dialogo-tareas",s=this.screen.createElement("form",o,"card","");this.screen.appendChild(s,"span","","titulo",(-1==n?"Nueva":"Editar")+" tarea");var d=this.screen.appendChild(s,"div","editor1","","");this.screen.appendChild(d,"label","","","Título").setAttribute("for","titulo");const A=this.screen.appendChild(d,"input","titulo","","");A.setAttribute("maxlength",this.max_lenght_nombre_tarea),A.setAttribute("name","titulo"),A.setAttribute("value",e.titulo),this.screen.moveCursorToEnd(A),this.screen.appendChild(d,"label","","","Descripción").setAttribute("for","descripcion");const c=this.screen.appendChild(d,"textarea","descripcion","",e.descripcion);c.setAttribute("maxlength","300"),c.setAttribute("name","descripcion");var l=this.screen.appendChild(s,"div","editor2","","");this.screen.appendChild(l,"label","","","Prioridad");const u=this.screen.appendChild(l,"div","prioridad","","");this.screen.appendChild(u,"label","","","Alta").setAttribute("for","alta");const h=this.screen.appendChild(u,"input","alta","","");h.setAttribute("value","alta"),h.setAttribute("type","radio"),h.setAttribute("name","prioridad"),h.checked="alta"==e.prioridad||""==e.prioridad,this.screen.appendChild(u,"label","","","Media").setAttribute("for","media");const p=this.screen.appendChild(u,"input","media","","");p.setAttribute("value","media"),p.setAttribute("type","radio"),p.setAttribute("name","prioridad"),p.checked="media"==e.prioridad,this.screen.appendChild(u,"label","","","Baja").setAttribute("for","baja");const m=this.screen.appendChild(u,"input","baja","","");m.setAttribute("value","baja"),m.setAttribute("type","radio"),m.setAttribute("name","prioridad"),m.checked="baja"==e.prioridad,this.screen.appendChild(l,"label","","etiqueta","Fecha").setAttribute("for","titulo");const g=this.screen.appendChild(l,"input","fecha","","");g.setAttribute("type","date"),g.setAttribute("name","fecha"),g.valueAsDate=e.fecha?(0,a.Z)(e.fecha,"dd/MM/yyyy",new Date):new Date;const f=e.checklist;var C=this.screen.appendChild(s,"div","editor3","","");this.screen.appendChild(C,"label","","","Check-list");const b=this.interfaz.generarChecklist(!1,C,r,n,e,f),B=this.screen.appendChild(C,"div","checklist","",""),w=this.screen.appendChild(B,"input","task","","");w.setAttribute("maxlength",this.max_lenght_nombre_check),w.setAttribute("name","task"),w.placeholder="Nuevo check";const v=this.screen.appendChild(B,"button","addtask","anadir","");v.classList.add("button"),v.addEventListener("click",(a=>{a.preventDefault();const i=new t.M1(!1,w.value);f.push(i),this.interfaz.insertarCheck(!1,r,n,f.length-1,b,e,i),w.value="",w.focus(),b.scrollTop=b.scrollHeight}));const I=this.screen.appendChild(s,"div","botonera-dialogo-tarea","","");return this.screen.appendChild(I,"button","cancelarTarea","cancelar","Cancelar").addEventListener("click",(r=>{this.screen.removeDialogo(this.app,s,o)})),this.screen.appendChild(I,"button","add-tarea","aceptar","Aceptar").addEventListener("click",(e=>{e.preventDefault();var a=h.checked?"alta":p.checked?"media":"baja",d=new t.X_(A.value,a,(0,i.Z)(new Date(g.value),"dd/MM/yyyy"),c.value,f);this.screen.removeDialogo(this.app,s,o);const l=document.getElementById(`lista${r}`);-1==n?(n=this.viewmodel.listas[r].tareas.length,this.viewmodel.addTarea(r,d)):(this.viewmodel.editTarea(r,n,d),this.interfaz.eliminarVistaTarea(r,n)),this.interfaz.visualizarTarea(l,r,n,d).classList.add("show")})),s}}},500:(r,n,e)=>{e.d(n,{M1:()=>i,X_:()=>t,_O:()=>a});class t{constructor(r,n,e,t,a){this.titulo=r,this.prioridad=n,this.fecha=e,this.descripcion=t,this.checklist=a}}class a{constructor(r,n){this.nombre=r,this.tareas=n}}class i{constructor(r,n){this.etiqueta=n,this.hecho=r}}},736:(r,n,e)=>{e.d(n,{Z:()=>t});class t{colocarDialogo(r,n){const e=this.appendChild(r,"div",`oscurecedor-${n.id}`,"vitrina","");this.appendChild(e,"div","","capa","").appendChild(n)}removeDialogo(r,n,e){n.reset();const t=document.getElementById(`oscurecedor-${e}`);r.removeChild(t)}moveCursorToEnd(r){if(r.focus(),"number"==typeof r.selectionStart)r.selectionStart=r.selectionEnd=r.value.length;else if(void 0!==r.createTextRange){var n=r.createTextRange();n.collapse(!1),n.select()}}appendChild(r,n,e,t,a){let i=this.createElement(n,e,t,a);return r.appendChild(i),i}insertAfterElement(r,n,e,t,a){let i=this.createElement(n,e,t,a);return r.after(i),i}insertBeforeElement(r,n,e,t,a){let i=this.createElement(n,e,t,a);return r.before(i),i}createElement(r,n,e,t){let a=document.createElement(r);return""==!n&&(a.id=n),""==!e&&a.classList.add(e),a.textContent=t,a}}},842:(r,n,e)=>{e.d(n,{j:()=>i});var t=e(500),a=e(532);class i{appName="iWant To-Do";saludo="Hola de nuevo, ";constructor(){!function(r){var n;try{n=window.localStorage;var e="__storage_test__";return n.setItem(e,e),n.removeItem(e),!0}catch(r){return r instanceof DOMException&&(22===r.code||1014===r.code||"QuotaExceededError"===r.name||"NS_ERROR_DOM_QUOTA_REACHED"===r.name)&&n&&0!==n.length}}()?(this.listas=o(),localStorage.listas=JSON.stringify(this.listas),console.log(JSON.stringify(this.listas))):localStorage.getItem("usuario")?(this.listas=JSON.parse(localStorage.getItem("listas")),this.usuario=localStorage.getItem("usuario")):(this.listas=o(),localStorage.listas=JSON.stringify(this.listas))}reset(){this.listas=[],this.usuario=void 0,localStorage.clear()}setUsuario(r){localStorage.usuario=this.usuario=r}addLista(){return this.listas.push(new t._O("",[])),console.log("add lista"+(this.listas.length-1)),localStorage.listas=JSON.stringify(this.listas),this.listas.length-1}editListaName(r,n){this.listas[r].nombre=n,localStorage.listas=JSON.stringify(this.listas)}deleteLista(r){console.log(`delete lista${r}`),this.listas.splice(r,1),localStorage.listas=JSON.stringify(this.listas)}addTarea(r,n){this.listas[r].tareas.push(n),console.log(`add tarea${r}${this.listas[r].tareas.length-1}`),localStorage.listas=JSON.stringify(this.listas)}deleteTarea(r,n){console.log(`delete tarea${r}${n}`),this.listas[r].tareas.splice(n,1),localStorage.listas=JSON.stringify(this.listas)}editTarea(r,n,e){console.log(`edit tarea${r}${n}`),this.listas[r].tareas.splice(n,1,e),localStorage.listas=JSON.stringify(this.listas)}changeCheckedStatus(r,n,e,t){console.log(`change check${r}${n}${e} ${t}`),this.listas[r].tareas[n].checklist[e].hecho=t,localStorage.listas=JSON.stringify(this.listas)}deleteCheck(r,n,e){console.log(`deletecheck${r}${n}${e}`),this.listas[r].tareas[n].checklist.splice(e,1),localStorage.listas=JSON.stringify(this.listas)}}function o(){const r=[],n=[],e=[];var i=new t.M1(!0,"Estudiar tema"),o=new t.M1(!0,"Desarrollar interfaz"),s=new t.M1(!0,"Implementar funcionalidades"),d=new t.M1(!0,"Añadir widget del tiempo"),A=new t.M1(!0,"Desplegar en GitHub Pages");e.push(i),e.push(o),e.push(s),e.push(d),e.push(A);var c=new t.X_("Hacer app de lista de tareas","alta",(0,a.Z)(new Date(2022,3,31),"dd/MM/yyyy"),"Desarrollar una app web de gestión de listas de tareas",e);n.push(c);const l=[];var u=new t.M1(!1,"Desarrollar interfaz"),h=new t.M1(!1,"Implementar funcionalidades"),p=new t.M1(!1,"Realizar tests"),m=new t.M1(!1,"Desplegar app");l.push(u),l.push(h),l.push(p),l.push(m);var g=new t.X_("Juego de Hundir la flota","media",(0,a.Z)(new Date(2022,4,6),"dd/MM/yyyy"),"Crear juego online de hundir la flota.",l);n.push(g);const f=new t._O("Teralco",n);r.push(f);const C=[],b=[];var B=new t.M1(!0,"Hacer la cama"),w=new t.M1(!0,"Limpiar el polvo"),v=new t.M1(!1,"Barrer y fregar");b.push(B),b.push(w),b.push(v);var I=new t.X_("Limpiar la habitacion","baja",(0,a.Z)(new Date(2022,4,1),"dd/MM/yyyy"),"Guardar todo donde no se vea.",b);C.push(I);const x=[];var k=new t.M1(!0,"Espaguetis"),y=new t.M1(!1,"Pimientos"),E=new t.M1(!0,"Cebollas"),T=new t.M1(!1,"Tomate frito"),D=new t.M1(!1,"Carne picada"),M=new t.M1(!0,"Chocolate"),S=new t.M1(!1,"Pan");x.push(k),x.push(y),x.push(E),x.push(T),x.push(D),x.push(M),x.push(S);var Q=new t.X_("Hacer la compra","media",(0,a.Z)(new Date(2022,4,3),"dd/MM/yyyy"),"Comprar lo necesario para la semana.",x);C.push(Q);const L=[];var U=new t.M1(!0,"Hacer la compra de la comida"),Z=new t.M1(!1,"Cortar y lavar la verdura"),O=new t.M1(!0,"Hervir la pasta"),N=new t.M1(!1,"Hacer el sofrito"),Y=new t.M1(!1,"Mezclar todo en la sartén"),R=new t.M1(!1,"Servir y saborear");L.push(U),L.push(Z),L.push(O),L.push(N),L.push(Y),L.push(R);var j=new t.X_("Cocinar algo delicioso","alta",(0,a.Z)(new Date(2022,4,2),"dd/MM/yyyy"),"Hacer espaguetis a la boloñesa.",L);C.push(j);const q=new t._O("Casa",C);return r.push(q),r}},952:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(736);function a(r,n,e,a,i){new t.Z,navigator.geolocation.getCurrentPosition((t=>{console.log("Tengo la ubicación: ",t);const o=t.coords;return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${o.latitude}&lon=${o.longitude}&units=metric&lang=es&appid=f8530b783acd342e7b8ec3e7f8b4347f`,{mode:"cors"}).then((function(r){return console.log("before "+r),r.json()})).then((function(t){console.log("Tengo el tiempo: ",t),n.src=`http://openweathermap.org/img/wn/${t.weather[0].icon}@2x.png`,e.textContent=t.weather[0].description,a.textContent=Math.round(t.main.temp)+"°C",i.textContent=t.name,r.classList.remove("oculto")}),(function(r){console.log("No se ha podido cargar la información metereológica: "+r)}))}),(r=>(console.log("Error obteniendo ubicación: ",r),this.defaultLocation)),{enableHighAccuracy:!0,maximumAge:0,timeout:1e4})}},970:(r,n,e)=>{r.exports=e.p+"069f9f996656c40af9f2.svg"},492:(r,n,e)=>{r.exports=e.p+"8565b1f72c7a187ec880.jpg"},10:(r,n,e)=>{r.exports=e.p+"a95c38d78373878a1bca.svg"},498:(r,n,e)=>{r.exports=e.p+"76fa417c1b530eb81f09.svg"},789:(r,n,e)=>{r.exports=e.p+"bc4cfe1002a83119ed50.svg"},156:(r,n,e)=>{r.exports=e.p+"24003978b633d7478cf7.svg"},608:(r,n,e)=>{r.exports=e.p+"be031f40a20a0bbd934f.svg"}},n={};function e(t){var a=n[t];if(void 0!==a)return a.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,(()=>{var r=e(842),n=e(500),t=e(736),a=e(343),i=e(952),o=e(379),s=e.n(o),d=e(795),A=e.n(d),c=e(569),l=e.n(c),u=e(565),h=e.n(u),p=e(216),m=e.n(p),g=e(589),f=e.n(g),C=e(521),b={};b.styleTagTransform=f(),b.setAttributes=h(),b.insert=l().bind(null,"head"),b.domAPI=A(),b.insertStyleElement=m(),s()(C.Z,b),C.Z&&C.Z.locals&&C.Z.locals;const B=new r.j,w=new class{max_lenght_nombre_lista=25;max_lenght_nombre_tarea=29;max_lenght_nombre_check=35;screen=new t.Z;constructor(r){this.viewmodel=r,this.dialogos=new a.Z(this.screen,this,r)}reiniciarPrograma(){const r=document.getElementsByTagName("body")[0],n=document.getElementById("app");return this.viewmodel.reset(),r.removeChild(n),this.generarInterfaz()}generarInterfaz(){const r=document.getElementsByTagName("body")[0],n=this.screen.appendChild(r,"div","app","","");return this.dialogos.setLayout(n),n.appendChild(this.renderizarHeader(n,this.viewmodel.usuario?this.viewmodel.saludo+this.viewmodel.usuario:"Login")),this.renderizarTableroListas(),this.viewmodel.usuario||this.dialogos.show("dialogo-bienvenida"),this.renderizarFooter(n),n}generarWidgetTiempo(){const r=this.screen.createElement("div","weather","oculto",""),n=this.screen.appendChild(r,"img","weather-image","",""),e=this.screen.appendChild(r,"div","temp-layout","",""),t=this.screen.appendChild(e,"span","weather-temp","",""),a=this.screen.appendChild(e,"span","weather-loc","",""),o=this.screen.appendChild(r,"span","weather-description","","");return(0,i.Z)(r,n,o,t,a),r}renderizarHeader(r,n){const e=this.screen.createElement("div","header","",""),t=this.screen.appendChild(e,"div","","header","");this.screen.appendChild(t,"span","logo","",this.viewmodel.appName);const a=this.screen.appendChild(t,"a","saludo","",n);a.setAttribute("href","#"),a.addEventListener("click",(r=>{r.preventDefault(),this.dialogos.show("dialogo-bienvenida")}));const i=this.screen.appendChild(e,"div","","header","");return this.screen.appendChild(i,"button","anadir-lista","","Añadir lista nueva").addEventListener("click",(r=>{var n=this.viewmodel.addLista();document.getElementById("main").appendChild(this.renderizarLista(n,this.viewmodel.listas[n],!0))})),i.appendChild(this.generarWidgetTiempo()),e}renderizarTableroListas(){const r=this.viewmodel.listas,n=document.getElementById("header"),e=this.screen.insertAfterElement(n,"div","main","","");for(let n=0;n<r.length;n++){const t=r[n];e.appendChild(this.renderizarLista(n,t))}}renderizarLista(r,n,e){const t=this.screen.createElement("div","","card","");return t.id=`lista${r}`,this.generarCabeceraLista(e,r,t,n.nombre),this.renderizarTareas(t,r,n.tareas),t}generarCabeceraLista(r,e,t,a){const i=this.screen.appendChild(t,"div","","cabecera",""),o=this.screen.appendChild(i,"input","","nombre",a);o.value=a,o.placeholder="Nombre de la lista",o.setAttribute("maxlength",this.max_lenght_nombre_lista),o.disabled=!0;const s=this.screen.appendChild(i,"div","","acciones",""),d=this.screen.appendChild(s,"div","","tooltip",""),A=this.screen.appendChild(d,"button","","editar","");this.screen.appendChild(d,"span","","tooltiptext","Editar el nombre de la lista");const c=this.screen.appendChild(s,"div","","tooltip",""),l=this.screen.appendChild(c,"button","","eliminar","");this.screen.appendChild(c,"span","","tooltiptext","Eliminar esta lista");const u=this.screen.appendChild(s,"div","","tooltip",""),h=this.screen.appendChild(u,"button","","anadir","");this.screen.appendChild(u,"span","","tooltiptext","Añadir una nueva tarea"),A.dataset.indexLista=h.dataset.indexLista=l.dataset.indexLista=e;const p=this,m=document.getElementById("app");return A.addEventListener("click",(r=>{r.stopPropagation(),this.mostrarEditorNombreLista(i,e)})),l.addEventListener("click",(r=>{r.stopPropagation();const n=document.getElementById("main");this.dialogos.show("dialogo-confirmacion","¿Desea eliminar esta lista?",(function(){p.viewmodel.deleteLista(e),m.removeChild(n),p.renderizarTableroListas()}))})),h.addEventListener("click",(r=>{var t=new n.X_("","",null,"",[]);this.dialogos.show("dialogo-tareas",e,-1,t)})),r&&this.mostrarEditorNombreLista(i,e),i}mostrarEditorNombreLista(r,n){const e=r.getElementsByClassName("acciones")[0],t=e.getElementsByClassName("tooltip")[0],a=e.getElementsByClassName("tooltip")[1],i=r.getElementsByClassName("nombre")[0];e.removeChild(t),i.disabled=!1,this.screen.moveCursorToEnd(i),i.focus();const o=this.screen.insertBeforeElement(a,"button","","ok","");o.addEventListener("click",(r=>{r.preventDefault(),this.viewmodel.editListaName(n,i.value),e.removeChild(o),a.before(t),i.disabled=!0}))}eliminarVistaLista(r,n){const e=document.getElementById(`lista${n}`);r.removeChild(e)}renderizarTareas(r,n,e){for(let t=0;t<e.length;t++){const a=e[t];this.visualizarTarea(r,n,t,a)}}visualizarTarea(r,n,e,t){const a=document.getElementById(`tarea${n}-${+e-1}`);var i;if(null==a){const t=document.getElementById(`tarea${n}-${+e+1}`);i=null==t?this.screen.appendChild(r,"div",`tarea${n}-${e}`,"item",""):this.screen.insertBeforeElement(t,"div",`tarea${n}-${e}`,"item","")}else i=this.screen.insertAfterElement(a,"div",`tarea${n}-${e}`,"item","");return this.generarCabeceraTarea(i,n,e,t.prioridad,t.titulo,t.fecha),this.generarContenidoTarea(i,n,e,t),i}generarCabeceraTarea(r,n,e,t,a,i){const o=this.screen.appendChild(r,"div","","cabecera",""),s=this.screen.appendChild(o,"span","","opener",""),d=this.screen.appendChild(o,"span","","prioridad","");d.classList.add(t,"tooltip"),this.screen.appendChild(d,"span","","tooltiptext",`Prioridad ${t}`);const A=this.screen.appendChild(o,"span","","titulo",a),c=this.screen.appendChild(o,"span","","fecha",i),l=this.screen.appendChild(o,"div","","tooltip",""),u=this.screen.appendChild(l,"button","","eliminar","");this.screen.appendChild(l,"span","","tooltiptext","Eliminar esta tarea"),c.dataset.indexLista=A.dataset.indexLista=d.dataset.indexLista=s.dataset.indexLista=u.dataset.indexLista=s.dataset.indexLista=o.dataset.indexLista=n,c.dataset.indexTarea=A.dataset.indexTarea=d.dataset.indexTarea=s.dataset.indexTarea=u.dataset.indexTarea=s.dataset.indexTarea=o.dataset.indexTarea=e,o.addEventListener("click",(r=>{const n=r.target.dataset.indexLista,e=r.target.dataset.indexTarea;r.target.classList.toggle("show"),document.getElementById(`tarea${n}-${e}`).classList.toggle("show"),console.log(r.target)}));const h=this;return u.addEventListener("click",(r=>{r.stopPropagation();const t=document.getElementById("main"),a=document.getElementById("app");this.dialogos.show("dialogo-confirmacion","¿Desea eliminar esta tarea?",(function(){h.viewmodel.deleteTarea(n,e),a.removeChild(t),h.renderizarTableroListas()}))})),o}eliminarVistaTarea(r,n){const e=document.getElementById(`lista${r}`),t=document.getElementById(`tarea${r}-${n}`);e.removeChild(t)}generarContenidoTarea(r,n,e,t){const a=this.screen.appendChild(r,"div","","contenido","");this.screen.appendChild(a,"span","","descripcion",t.descripcion),this.generarChecklist(!0,a,n,e,t);const i=this.screen.appendChild(a,"button","","editar","");return i.dataset.indexLista=n,i.dataset.indexTarea=e,i.addEventListener("click",(r=>{var t=this.viewmodel.listas[n].tareas[e];this.dialogos.show("dialogo-tareas",n,e,t)})),a}generarChecklist(r,n,e,t,a){const i=this.screen.appendChild(n,"div","","checklist","");for(let n=0;n<a.checklist.length;n++){const o=a.checklist[n];this.insertarCheck(r,e,t,n,i,a,o)}return i}insertarCheck(r,n,e,t,a,i,o){const s=this.screen.appendChild(a,"div","","task",""),d=this.screen.appendChild(s,"input",`done${n}-${e}-${t}`,"","");d.setAttribute("name",d.id),d.setAttribute("type","checkbox"),d.disabled=!r,d.checked=o.hecho,d.dataset.indexLista=n,d.dataset.indexTarea=e,d.dataset.indexCheck=t,this.screen.appendChild(s,"label","","",o.etiqueta).setAttribute("for",d.id),this.screen.appendChild(s,"button","","eliminar","").addEventListener("click",(r=>{r.preventDefault(),i.checklist.splice(t,1),a.removeChild(s)})),d.addEventListener("change",(r=>{this.viewmodel.changeCheckedStatus(n,e,t,d.checked)}))}renderizarFooter(r){const n=this.screen.appendChild(r,"div","footer","","");return this.screen.appendChild(n,"a","autor","","Created by josemm92 - 2022").setAttribute("href","https://github.com/josemacias92"),n}}(B);w.generarInterfaz()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,